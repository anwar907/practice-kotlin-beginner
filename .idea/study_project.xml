<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="StudySettings">
    <StudyTaskManager>
      <option name="VERSION" value="16" />
      <option name="myUserTests">
        <map />
      </option>
      <option name="course">
        <EduCourse>
          <option name="authors">
            <list />
          </option>
          <option name="compatible" value="true" />
          <option name="courseMode" value="Study" />
          <option name="createDate" value="1556783129000" />
          <option name="customPresentableName" />
          <option name="description" value="Memulai Pemrograman dengan Kotlin adalah kelas pengantar untuk mempelajari Functional Programming serta Object-Oriented Programming menggunakan Kotlin.&#10;&#10;Pada project ini Anda akan mengerjakan beberapa latihan seperti: 1. Membangun dan Menjalankan Program Kotlin; 2. Kotlin Fundamental; 3. Control Flow; 4. Data Class dan Collections; 5. Functional; 6. Object-Oriented; 7. Generic; 8. Coroutines." />
          <option name="environment" value="" />
          <option name="id" value="54217" />
          <option name="index" value="-1" />
          <option name="instructors">
            <list />
          </option>
          <option name="language" value="kotlin 1.3" />
          <option name="languageCode" value="en" />
          <option name="name" value="Memulai Pemrograman dengan Kotlin" />
          <option name="public" value="true" />
          <option name="sectionIds">
            <list />
          </option>
          <option name="type" value="pycharm11 kotlin 1.3" />
          <option name="updateDate" value="1571195585000" />
          <option name="items">
            <list>
              <Section>
                <option name="courseId" value="54217" />
                <option name="customPresentableName" />
                <option name="id" value="84565" />
                <option name="index" value="1" />
                <option name="name" value="Membangun dan Menjalankan Program Kotlin" />
                <option name="position" value="1" />
                <option name="updateDate" value="1566542698000" />
                <option name="items">
                  <list>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226570" />
                      <option name="index" value="1" />
                      <option name="name" value="Program Pertama Kotlin" />
                      <option name="updateDate" value="1565103252000" />
                      <option name="unitId" value="199118" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Hello Kotlin" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Program Pertama Kotlin&lt;/h1&gt;&#10;Ini adalah contoh kode untuk mencetak teks &lt;b&gt;&quot;Hello Kotlin!&quot;&lt;/b&gt; pada konsol.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://dicoding.com/academies/80/tutorials/4072&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Membuat Program Dengan IntelliJ IDEA&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700930" />
                            <option name="index" value="1" />
                            <option name="name" value="Hello Kotlin" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="fun main() {&#10;    print(&quot;Hello Kotlin!&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103252000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="241084" />
                      <option name="index" value="2" />
                      <option name="name" value="Latihan" />
                      <option name="updateDate" value="1566542698000" />
                      <option name="unitId" value="213417" />
                      <option name="items">
                        <list>
                          <OutputTask>
                            <option name="customPresentableName" value="Latihan 1" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&#10;&lt;h1&gt;Latihan 1&lt;/h1&gt;&#10;Untuk menguji pemahaman Anda dalam menjalankan perintah dasar Kotlin, lengkapi kode disamping untuk&#10;mencetak teks:&#10;&lt;br&gt;&#10;&lt;br&gt;&#10;&lt;pre&gt;Kotlin is Awesome!&lt;/pre&gt;&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="766347" />
                            <option name="index" value="1" />
                            <option name="name" value="Latihan 1" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="true" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    println()&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="test/output.txt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/output.txt" />
                                      <option name="text" value="Kotlin is Awesome!&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1566542694000" />
                          </OutputTask>
                          <OutputTask>
                            <option name="customPresentableName" value="Latihan 2" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&#10;&lt;h1&gt;Latihan 2&lt;/h1&gt;&#10;Anda sudah berhasil mengerjakan Latihan 1 dengan baik. Goodjob! Untuk latihan selanjutnya, lengkapi kode disamping untuk&#10;mencetak teks:&#10;&lt;br&gt;&#10;&lt;br&gt;&#10;&lt;pre&gt;Kotlin,&#10;is Awesome!&lt;/pre&gt;&#10;&lt;br&gt;&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="766348" />
                            <option name="index" value="2" />
                            <option name="name" value="Latihan 2" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="true" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    println()&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="test/output.txt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/output.txt" />
                                      <option name="text" value="Kotlin,&#10;is Awesome!" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1566542698000" />
                          </OutputTask>
                        </list>
                      </option>
                    </Lesson>
                  </list>
                </option>
              </Section>
              <Section>
                <option name="courseId" value="54217" />
                <option name="customPresentableName" />
                <option name="id" value="84566" />
                <option name="index" value="2" />
                <option name="name" value="Kotlin Fundamental" />
                <option name="position" value="2" />
                <option name="updateDate" value="1571195585000" />
                <option name="items">
                  <list>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226571" />
                      <option name="index" value="1" />
                      <option name="name" value="Hello Kotlin" />
                      <option name="updateDate" value="1565103265000" />
                      <option name="unitId" value="199119" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Hello Kotlin 1" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Hello Kotlin&lt;/h1&gt;&#10;Ini adalah contoh kode untuk mencetak teks &lt;b&gt;&quot;Hello Kotlin!&quot;&lt;/b&gt; pada konsol.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4074&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Kotlin Fundamental&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700933" />
                            <option name="index" value="1" />
                            <option name="name" value="Hello Kotlin 1" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    println(&quot;Hello World!&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103261000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Hello Kotlin 2" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Hello Kotlin&lt;/h1&gt;&#10;Ini adalah beberapa contoh kode untuk penggunaan fungsi &lt;code&gt;print&lt;/code&gt; dan &lt;code&gt;println&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4074&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Kotlin Fundamental&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700934" />
                            <option name="index" value="2" />
                            <option name="name" value="Hello Kotlin 2" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val name = &quot;Alfian&quot;&#10;&#10;    print(&quot;Hello my name is &quot;)&#10;    println(name)&#10;    print(if (true) &quot;Always true&quot; else &quot;Always false&quot;)&#10;}&#10;/*&#10;   output:&#10;       Hello my name is Alfian&#10;       Always true&#10;*/" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103265000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226572" />
                      <option name="index" value="2" />
                      <option name="name" value="Data Type" />
                      <option name="updateDate" value="1565103291000" />
                      <option name="unitId" value="199120" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Character" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Character&lt;/h1&gt;&#10;Ini adalah contoh kode untuk menggunakan operator &lt;i&gt;increment&lt;/i&gt; dan &lt;i&gt;decrement&lt;/i&gt; pada Character.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4079?from=4075&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Character&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700935" />
                            <option name="index" value="1" />
                            <option name="name" value="Character" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    var vocal = 'A'&#10;&#10;    println(&quot;Vocal &quot; + vocal++)&#10;    println(&quot;Vocal &quot; + vocal++)&#10;    println(&quot;Vocal &quot; + vocal++)&#10;    println(&quot;Vocal &quot; + vocal--)&#10;    println(&quot;Vocal &quot; + vocal--)&#10;    println(&quot;Vocal &quot; + vocal--)&#10;    println(&quot;Vocal &quot; + vocal--)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103268000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="String" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;String&lt;/h1&gt;&#10;Ini adalah contoh kode untuk mendapatkan karakter pertama dari sebuah &lt;b&gt;String&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4080?from=4079&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;String&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700936" />
                            <option name="index" value="2" />
                            <option name="name" value="String" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val text  = &quot;Kotlin&quot;&#10;    val firstChar = text[0]&#10;&#10;    print(&quot;First character of $text is $firstChar&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103271000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Char in String" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;String with Char&lt;/h1&gt;&#10;Ini adalah contoh kode untuk mendapatkan setiap karakter dalam &lt;b&gt;String&lt;/b&gt; dalam bentuk tipe &lt;b&gt;Char&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4080?from=4079&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;String&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700937" />
                            <option name="index" value="3" />
                            <option name="name" value="Char in String" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val text  = &quot;Kotlin&quot;&#10;    for (char in text){&#10;        print(&quot;$char &quot;)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103275000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Escaped String" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Escaped String&lt;/h1&gt;&#10;Ini adalah contoh kode escaped pada &lt;b&gt;String&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4080?from=4079&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;String&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700938" />
                            <option name="index" value="4" />
                            <option name="name" value="Escaped String" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// type your solution here&#10;fun main() {&#10;    val statement = &quot;Kotlin is \&quot;Awesome!\&quot;&quot;&#10;    println(statement)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103278000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Unicode String" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Unicode in String&lt;/h1&gt;&#10;Ini adalah contoh kode untuk menggunakan &lt;i&gt;unicode&lt;/i&gt; di dalam &lt;b&gt;String&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4080?from=4079&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;String&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700939" />
                            <option name="index" value="5" />
                            <option name="name" value="Unicode String" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val name = &quot;Unicode test: \u0394&quot;&#10;    print(name)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103281000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Raw String" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Raw String&lt;/h1&gt;&#10;Ini adalah contoh kode Raw String untuk menuliskan &lt;i&gt;multiline&lt;/i&gt; dan &lt;i&gt;arbitrary text&lt;/i&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4074?from=4243&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;String&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700940" />
                            <option name="index" value="6" />
                            <option name="name" value="Raw String" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val line = &quot;&quot;&quot;&#10;        Line 1&#10;        Line 2&#10;        Line 3&#10;        Line 4&#10;    &quot;&quot;&quot;.trimIndent()&#10;&#10;    print(line)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103285000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Array Initialization" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Array&lt;/h1&gt;&#10;Ini adalah contoh kode untuk menginisialisasi &lt;b&gt;Array&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4083?from=4080&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Array&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700941" />
                            <option name="index" value="7" />
                            <option name="name" value="Array Initialization" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val intArray = intArrayOf(1, 3, 5, 7)&#10;    print(intArray[2])&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103288000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Update Array" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Arrays&lt;/h1&gt;&#10;Ini adalah contoh kode untuk mengubah nilai pada &lt;b&gt;Array&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4083?from=4080&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Arrays&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700942" />
                            <option name="index" value="8" />
                            <option name="name" value="Update Array" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val intArray = intArrayOf(1, 3, 5, 7)  // [1, 3, 5, 7]&#10;    intArray[2] = 11 // [1, 3, 11, 7]&#10;&#10;    print(intArray[2])&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103291000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226573" />
                      <option name="index" value="3" />
                      <option name="name" value="Function" />
                      <option name="updateDate" value="1565103295000" />
                      <option name="unitId" value="199121" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Function Initilization" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Function&lt;/h1&gt;&#10;Ini adalah contoh kode untuk cara penggunaan fungsi pada Kotlin.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4086&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Function&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700944" />
                            <option name="index" value="1" />
                            <option name="name" value="Function Initilization" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val user = setUser(&quot;Alfian&quot;, 19)&#10;    println(user)&#10;&#10;    printUser(&quot;Alfian&quot;)&#10;}&#10;&#10;fun setUser(name: String, age: Int) = &quot;Your name is $name, and you $age years old&quot;&#10;&#10;fun printUser(name: String) {&#10;    println(&quot;Your name is $name&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103295000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226574" />
                      <option name="index" value="4" />
                      <option name="name" value="If Expression" />
                      <option name="updateDate" value="1565103308000" />
                      <option name="unitId" value="199122" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="If" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;If&lt;/h1&gt;&#10;Ini adalah contoh kode dalam menggunakan &lt;i&gt;if expression&lt;/i&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4087?from=4086&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;If Expression&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700946" />
                            <option name="index" value="1" />
                            <option name="name" value="If" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val officeOpen = 7&#10;    val now = 20&#10;    if (now &gt; officeOpen) {&#10;        println(&quot;office already open&quot;)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103298000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="If Else" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;If Else&lt;/h1&gt;&#10;Ini adalah contoh kode &lt;b&gt;if expression&lt;/b&gt; dengan blok &lt;code&gt;else&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4087?from=4086&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;If Expression&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700947" />
                            <option name="index" value="2" />
                            <option name="name" value="If Else" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val officeOpen = 7&#10;    val now = 20&#10;    val office: String&#10;    if (now &gt; officeOpen) {&#10;        office = &quot;Office already open&quot;&#10;    } else {&#10;        office = &quot;Office is closed&quot;&#10;    }&#10;&#10;    print(office)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103301000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="If as a Expression" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;If as Expression&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana menggunakan &lt;b&gt;if expression&lt;/b&gt; agar dapat menggembalikan nilai.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4087?from=4086&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;If Expression&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700948" />
                            <option name="index" value="3" />
                            <option name="name" value="If as a Expression" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val officeOpen = 7&#10;    val now = 20&#10;    val office: String&#10;    office = if (now &gt; officeOpen) {&#10;        &quot;Office already open&quot;&#10;    } else {&#10;        &quot;Office is closed&quot;&#10;    }&#10;&#10;    print(office)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103305000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="If Else If" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;If Else If&lt;/h1&gt;&#10;Ini adalah contoh kode &lt;b&gt;if expression&lt;/b&gt; dengan beberapa kondisi.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4087?from=4086&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;If Expression&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700949" />
                            <option name="index" value="4" />
                            <option name="name" value="If Else If" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val officeOpen = 7&#10;    val now = 7&#10;    val office: String&#10;    office = if (now &gt; 7) {&#10;        &quot;Office already open&quot;&#10;    } else if (now == officeOpen){&#10;        &quot;Wait a minute, office will be open&quot;&#10;    } else {&#10;        &quot;Office is closed&quot;&#10;    }&#10;&#10;    print(office)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103308000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226575" />
                      <option name="index" value="5" />
                      <option name="name" value="Boolean" />
                      <option name="updateDate" value="1565103318000" />
                      <option name="unitId" value="199123" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Conjuction" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Conjunction&lt;/h1&gt;&#10;Ini adalah contoh kode dalam menggunakan &lt;b&gt;Conjunction&lt;/b&gt; untuk sebuah kondisi.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4090?from=4087&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Boolean&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700951" />
                            <option name="index" value="1" />
                            <option name="name" value="Conjuction" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val officeOpen = 7&#10;    val officeClosed = 16&#10;    val now = 20&#10;&#10;    val isOpen = now &gt;= officeOpen &amp;&amp; now &lt;= officeClosed&#10;&#10;    print(&quot;Office is open : $isOpen&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103311000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Disjunction" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Disjunction&lt;/h1&gt;&#10;Ini adalah contoh kode dalam menggunakan &lt;b&gt;Disjunction&lt;/b&gt; untuk sebuah kondisi.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4090?from=4087&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Boolean&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700952" />
                            <option name="index" value="2" />
                            <option name="name" value="Disjunction" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val officeOpen = 6&#10;    val officeClosed = 16&#10;    val now = 20&#10;&#10;    val isOpen = now &lt; officeOpen || now &gt; officeClosed&#10;&#10;    print(&quot;Office is closed : $isOpen&quot;)&#10;}&#10;&#10;/*&#10;    Output : Office is closed : true&#10; */" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103314000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Negation" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Negation&lt;/h1&gt;&#10;Ini adalah contoh kode dalam menggunakan &lt;b&gt;Negation&lt;/b&gt; untuk sebuah kondisi.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4090?from=4087&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Boolean&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700953" />
                            <option name="index" value="3" />
                            <option name="name" value="Negation" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val officeOpen = 7&#10;    val now = 10&#10;    val isOpen = now &gt; officeOpen&#10;&#10;    if (!isOpen) {&#10;        print(&quot;Office is closed&quot;)&#10;    } else {&#10;        print(&quot;Office is open&quot;)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103318000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226819" />
                      <option name="index" value="6" />
                      <option name="name" value="Numbers" />
                      <option name="updateDate" value="1565103343000" />
                      <option name="unitId" value="199356" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Number Initilization" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Numbers Initialization&lt;/h1&gt;&#10;Ini adalah contoh kode untuk inisialisasi beberapa tipe data &lt;b&gt;Number&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4092?from=4095&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Numbers&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701949" />
                            <option name="index" value="1" />
                            <option name="name" value="Number Initilization" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="&#10;/* Int (32 Bit) */&#10;val intNumbers = 100&#10;&#10;/* Long (64 Bit) */&#10;val longNumber: Long = 100&#10;val longNumbers = 100L&#10;&#10;/* Short (16 Bit) */&#10;val shortNumber: Short = 10&#10;&#10;/* Byte (8 Bit) */&#10;val byteNumber = 0b11010010&#10;&#10;/* Double (64 Bit) */&#10;val doubleNumbers = 1.3&#10;&#10;fun main() {&#10;    println(&quot;Numbers&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103321000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Number with max and min values" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Numbers with max and min value&lt;/h1&gt;&#10;Ini adalah contoh kode untuk mendapatkan nilai minimal dan maksimal dari tipe &lt;b&gt;Number&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4092?from=4095&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Numbers&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701950" />
                            <option name="index" value="2" />
                            <option name="name" value="Number with max and min values" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="fun main() {&#10;    val maxInt = Int.MAX_VALUE&#10;    val minInt = Int.MIN_VALUE&#10;&#10;    println(maxInt)&#10;    println(minInt)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103324000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Number operation" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Number operation&lt;/h1&gt;&#10;Ini adalah contoh kode operasi matematika pada object dengan tipe &lt;b&gt;Number&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4092?from=4095&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Numbers&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701951" />
                            <option name="index" value="3" />
                            <option name="name" value="Number operation" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="fun main() {&#10;    val numberOne = 1&#10;    val numberTwo = 2&#10;&#10;    print(numberOne + numberTwo)&#10;&#10;    print(numberOne / numberTwo)&#10;&#10;    println(5 + 4 * 4)&#10;&#10;    println((5 + 4) * 4)&#10;&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103327000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="String to Number" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;String to Numbers&lt;/h1&gt;&#10;Ini adalah contoh kode untuk melakukan konversi ke tipe data &lt;b&gt;Number&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4092?from=4095&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Numbers&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701952" />
                            <option name="index" value="4" />
                            <option name="name" value="String to Number" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="fun main() {&#10;    val stringNumber = &quot;23&quot;&#10;    val intNumber = 3&#10;&#10;    print(intNumber + stringNumber.toInt())&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103331000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226576" />
                      <option name="index" value="7" />
                      <option name="name" value="Nullable Types" />
                      <option name="updateDate" value="1565103331000" />
                      <option name="unitId" value="199124" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Nullable Types" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Nullable Type&lt;/h1&gt;&#10;Ini adalah contoh kode dalam menggunakan Nullable types untuk sebuah object yang bertipe nullable.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4095?from=4092&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Nullable Types&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700956" />
                            <option name="index" value="1" />
                            <option name="name" value="Nullable Types" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="fun main() {&#10;    val text: String? = null&#10;&#10;    //val textLength = text.length // compile time error&#10;&#10;    if (text != null){&#10;        val textLength = text.length // ready to go&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103334000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226577" />
                      <option name="index" value="8" />
                      <option name="name" value="Safe Call and Elvis Operator" />
                      <option name="updateDate" value="1565103334000" />
                      <option name="unitId" value="199125" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Safe Call Operator" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Safe Call&lt;/h1&gt;&#10;Ini adalah contoh kode dari penggunaan operator &lt;b&gt;Safe Call&lt;/b&gt; untuk menangani object yang bertipe &lt;b&gt;Nullable&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4096?from=4090&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Safe Call and Elvis Operator&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700958" />
                            <option name="index" value="1" />
                            <option name="name" value="Safe Call Operator" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="fun main() {&#10;    val text: String? = null&#10;    text?.length&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103337000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Elvis Operator" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Elvis Operator&lt;/h1&gt;&#10;Ini adalah contoh kode dari penggunaan operator &lt;b&gt;Elvis Operator&lt;/b&gt; untuk menangani object yang bertipe &lt;b&gt;Nullable&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4096?from=4090&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Safe Call and Elvis Operator&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="700959" />
                            <option name="index" value="2" />
                            <option name="name" value="Elvis Operator" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="fun main() {&#10;    val text: String? = null&#10;    val textLength = text?.length ?: 7&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103340000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226578" />
                      <option name="index" value="9" />
                      <option name="name" value="String Template" />
                      <option name="updateDate" value="1565103340000" />
                      <option name="unitId" value="199126" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="String Template" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;String Template&lt;/h1&gt;&#10;Ini adalah contoh kode untuk meminimalisir &lt;i&gt;concatenation&lt;/i&gt; pada sebuah String dengan &lt;b&gt;String Template&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4098&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;String&#10;    Template&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701117" />
                            <option name="index" value="1" />
                            <option name="name" value="String Template" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val name = &quot;Kotlin&quot;&#10;    val old = 19&#10;    print(&quot;My name is $name, im $old years old&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103343000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="241115" />
                      <option name="index" value="10" />
                      <option name="name" value="Latihan" />
                      <option name="updateDate" value="1571195585000" />
                      <option name="unitId" value="213445" />
                      <option name="items">
                        <list>
                          <OutputTask>
                            <option name="customPresentableName" value="Latihan" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Latihan&lt;/h1&gt;&#10;Lengkapi potongan kode pada program sederhana di samping agar dapat berjalan dengan baik.&#10;&lt;br&gt;&#10;&lt;br&gt;&#10;&lt;b&gt;&lt;i&gt;TODO 1 :&lt;/i&gt;&lt;/b&gt; &lt;br&gt;Lengkapi inisialisasi variable &lt;code&gt;result&lt;/code&gt; dengan melakukan operasi matematika pada argumen yang diberikan dengan rumus perhitungan berikut:&#10;&lt;pre&gt;valueA + (valueB - valueC)&lt;/pre&gt;&#10;Jika &lt;code&gt;valueC&lt;/code&gt; bernilai null berikan &lt;b&gt;100&lt;/b&gt; untuk nilai defaultnya.&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;b&gt;&lt;i&gt;TODO 2 :&lt;/i&gt;&lt;/b&gt;&lt;br&gt; Lengkapi dengan kode untuk mengembalikan nilai berupa teks yang nantinya akan dicetak pada konsol.&#10;&lt;br&gt;&#10;&lt;br&gt;&#10;&lt;br&gt;&#10;Jika dijalankan, maka pada konsol akan menampilkan text:&#10;&lt;br&gt;&#10;&lt;pre&gt;ResultA is 39&#10;ResultB is 17&lt;/pre&gt;&#10;&#10;&lt;div class=&quot;hint&quot;&gt;&#10;  Anda bisa menggunakan &lt;b&gt;Elvis Operator&lt;/b&gt; untuk penanganan parameter yang bernilai null.&#10;&lt;/div&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878043" />
                            <option name="index" value="1" />
                            <option name="name" value="Latihan" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="true" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    val valueA = 65&#10;    val valueB = 52&#10;    val valueC = 78&#10;&#10;    val resultA = calculate(valueA, valueB, valueC)&#10;    val resultB = calculate(valueA, valueB, null)&#10;&#10;    println(&quot;&quot;&quot;&#10;        ResultA is $resultA&#10;        ResultB is $resultB&#10;    &quot;&quot;&quot;.trimIndent())&#10;}&#10;&#10;fun calculate(valueA: Int, valueB: Int, valueC: Int?): Int {&#10;    // TODO 1&#10;    val result = 0&#10;    return generateResult(result)&#10;}&#10;&#10;// TODO 2&#10;fun generateResult(result: Int) = 0" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="test/output.txt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/output.txt" />
                                      <option name="text" value="ResultA is 39&#10;ResultB is 17" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193473000" />
                          </OutputTask>
                        </list>
                      </option>
                    </Lesson>
                  </list>
                </option>
              </Section>
              <Section>
                <option name="courseId" value="54217" />
                <option name="customPresentableName" />
                <option name="id" value="84572" />
                <option name="index" value="3" />
                <option name="name" value="Control Flow" />
                <option name="position" value="3" />
                <option name="updateDate" value="1571195544000" />
                <option name="items">
                  <list>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226597" />
                      <option name="index" value="1" />
                      <option name="name" value="Enumeration" />
                      <option name="updateDate" value="1565103377000" />
                      <option name="unitId" value="199145" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Enumeration" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Enumeration&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisasi &lt;b&gt;Enumeration&lt;/b&gt; dan mendapatkan object &lt;b&gt;enum&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4142&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Enumeration&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701045" />
                            <option name="index" value="1" />
                            <option name="name" value="Enumeration" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val color : Color = Color.RED&#10;    print(color)&#10;}&#10;&#10;enum class Color{&#10;    RED, GREEN, BLUE&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103355000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Enum Object Value" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Enum Object Value&lt;/h1&gt;&#10;Ini adalah contoh kode untuk menambahkan value pada object &lt;b&gt;enum&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4142&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Enumeration&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701046" />
                            <option name="index" value="2" />
                            <option name="name" value="Enum Object Value" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val colorRed = Color.RED&#10;    val colorGreen = Color.GREEN&#10;    val colorBlue = Color.BLUE&#10;&#10;    println(colorRed)&#10;    println(colorGreen)&#10;    println(colorBlue)&#10;}&#10;&#10;enum class Color(val value: Int) {&#10;    RED(0xFF0000),&#10;    GREEN(0x00FF00),&#10;    BLUE(0x0000FF)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103358000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Anonymous Class in Enumeration" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Anonymous Class in Enumeration&lt;/h1&gt;&#10;Ini adalah contoh kode object &lt;b&gt;enum&lt;/b&gt; dengan &lt;i&gt;anonymous class&lt;/i&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4142?from&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Enumeration&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701047" />
                            <option name="index" value="3" />
                            <option name="name" value="Anonymous Class in Enumeration" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val colorRed = Color.RED&#10;    val colorGreen = Color.GREEN&#10;    val colorBlue = Color.BLUE&#10;&#10;    colorRed.printValue()&#10;    colorGreen.printValue()&#10;    colorBlue.printValue()&#10;}&#10;&#10;enum class Color(val value: Int) {&#10;    RED(0xFF0000) {&#10;        override fun printValue() {&#10;            println(&quot;value of RED is $value&quot;)&#10;        }&#10;    },&#10;    GREEN(0x00FF00) {&#10;        override fun printValue() {&#10;            println(&quot;value of GREEN is $value&quot;)&#10;        }&#10;    },&#10;    BLUE(0x0000FF) {&#10;        override fun printValue() {&#10;            println(&quot;value of BLUE is $value&quot;)&#10;        }&#10;    };&#10;&#10;    abstract fun printValue()&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103361000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="All of Enum Object" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;All of Enum Object&lt;/h1&gt;&#10;Ini adalah contoh kode untuk mendapatkan semua object enum dari sebuah &lt;b&gt;Enumeration&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4142&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Enumeration&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701048" />
                            <option name="index" value="4" />
                            <option name="name" value="All of Enum Object" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val colors: Array&lt;Color&gt; = Color.values()&#10;    colors.forEach { color -&gt;&#10;        println(color)&#10;    }&#10;}&#10;&#10;enum class Color(val value: Int) {&#10;    RED(0xFF0000),&#10;    GREEN(0x00FF00),&#10;    BLUE(0x0000FF)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103365000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="valueOf" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;valueOf()&lt;/h1&gt;&#10;Ini adalah contoh kode untuk mendapatkan object enum dengan memanfaatkan fungsi &lt;code&gt;valueOf()&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4142&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Enumeration&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701049" />
                            <option name="index" value="5" />
                            <option name="name" value="valueOf" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val color: Color = Color.valueOf(&quot;RED&quot;)&#10;    print(&quot;Color is $color&quot;)&#10;}&#10;&#10;enum class Color(val value: Int) {&#10;    RED(0xFF0000),&#10;    GREEN(0x00FF00),&#10;    BLUE(0x0000FF)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103368000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="enumValues" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;enumValues()&lt;/h1&gt;&#10;Ini adalah contoh kode untuk mendapatkan semua object enum dari sebuah &lt;b&gt;Enumeration&lt;/b&gt; dengan memanfaatkan fungsi &lt;code&gt;enumValues()&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4142&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Enumeration&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701050" />
                            <option name="index" value="6" />
                            <option name="name" value="enumValues" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val colors: Array&lt;Color&gt; = enumValues()&#10;    colors.forEach {color -&gt;&#10;        println(color)&#10;    }&#10;&#10;    val color: Color = enumValueOf(&quot;RED&quot;)&#10;    println(&quot;Color is $color&quot;)&#10;}&#10;&#10;enum class Color(val value: Int) {&#10;    RED(0xFF0000),&#10;    GREEN(0x00FF00),&#10;    BLUE(0x0000FF)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103371000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Enum Position" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Enum Position&lt;/h1&gt;&#10;Ini adalah contoh kode untuk mendapatkan posisi dari enum object.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4142&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Enumeration&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701051" />
                            <option name="index" value="7" />
                            <option name="name" value="Enum Position" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val color: Color = Color.GREEN&#10;&#10;    print(&quot;Position GREEN is ${color.ordinal}&quot;)&#10;}&#10;&#10;enum class Color(val value: Int) {&#10;    RED(0xFF0000),&#10;    GREEN(0x00FF00),&#10;    BLUE(0x0000FF)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103374000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Enumeration with When Expression" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Enumeration with When Expression&lt;/h1&gt;&#10;Ini adalah contoh kode untuk memeriksa instance dari sebuah enum object.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4142&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Enumeration&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701052" />
                            <option name="index" value="8" />
                            <option name="name" value="Enumeration with When Expression" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val color: Color = Color.GREEN&#10;&#10;    when(color){&#10;        Color.RED -&gt; print(&quot;Color is Red&quot;)&#10;        Color.BLUE -&gt; print(&quot;Color is Blue&quot;)&#10;        Color.GREEN -&gt; print(&quot;Color is Green&quot;)&#10;    }&#10;}&#10;&#10;enum class Color(val value: Int) {&#10;    RED(0xFF0000),&#10;    GREEN(0x00FF00),&#10;    BLUE(0x0000FF)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103377000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226598" />
                      <option name="index" value="2" />
                      <option name="name" value="When Expression" />
                      <option name="updateDate" value="1565103400000" />
                      <option name="unitId" value="199146" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="When" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;When&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan &lt;b&gt;When Expression&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4143&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;When Expression&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701056" />
                            <option name="index" value="1" />
                            <option name="name" value="When" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val value = 7&#10;&#10;    when(value){&#10;        6 -&gt; println(&quot;value is 6&quot;)&#10;        7 -&gt; println(&quot;value is 7&quot;)&#10;        8 -&gt; println(&quot;value is 8&quot;)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103381000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="When with Else block" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;When with Else block&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan &lt;b&gt;When Expression&lt;/b&gt; dengan blok &lt;b&gt;Else&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4143&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;When Expression&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701057" />
                            <option name="index" value="2" />
                            <option name="name" value="When with Else block" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val value = 20&#10;&#10;    when(value){&#10;        6 -&gt; println(&quot;value is 6&quot;)&#10;        7 -&gt; println(&quot;value is 7&quot;)&#10;        8 -&gt; println(&quot;value is 8&quot;)&#10;        else -&gt; println(&quot;value cannot be reached&quot;)&#10;    }&#10;}// type your solution here" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103384000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="When as a Expression" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;When as a Expresssion&lt;/h1&gt;&#10;Ini adalah contoh kode untuk menjadikan &lt;code&gt;when&lt;/code&gt; sebagai expression untuk mengembalikan nilai.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4143&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;When Expression&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701058" />
                            <option name="index" value="3" />
                            <option name="name" value="When as a Expression" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val value = 7&#10;    val stringOfValue = when (value) {&#10;        6 -&gt; &quot;value is 6&quot;&#10;        7 -&gt; &quot;value is 7&quot;&#10;        8 -&gt; &quot;value is 8&quot;&#10;        else -&gt; &quot;value cannot be reached&quot;&#10;    }&#10;&#10;    println(stringOfValue)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103387000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Multiple statement in Condition block" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Multiple statement in Condition block&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan &lt;code&gt;when&lt;/code&gt; dengan beberapa statement atau expression disetiap blok kondisi.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4143&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;When Expression&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701059" />
                            <option name="index" value="4" />
                            <option name="name" value="Multiple statement in Condition block" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val value = 7&#10;    val stringOfValue = when (value) {&#10;        6 -&gt; {&#10;            println(&quot;Six&quot;)&#10;            &quot;value is 6&quot;&#10;        }&#10;        7 -&gt; {&#10;            println(&quot;Seven&quot;)&#10;            &quot;value is 7&quot;&#10;        }&#10;        8 -&gt; {&#10;            println(&quot;Eight&quot;)&#10;            &quot;value is 8&quot;&#10;        }&#10;        else -&gt; {&#10;            println(&quot;undefined&quot;)&#10;            &quot;value cannot be reached&quot;&#10;        }&#10;    }&#10;&#10;    println(stringOfValue)&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103391000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="When with `is` operator" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;When with `is` operator&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan operator &lt;code&gt;is&lt;/code&gt; sebagai kondisi ketika menggunakan &lt;code&gt;when&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4143&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;When Expression&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701060" />
                            <option name="index" value="5" />
                            <option name="name" value="When with `is` operator" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val anyType : Any = 100L&#10;    when(anyType){&#10;        is Long -&gt; println(&quot;the value has a Long type&quot;)&#10;        is String -&gt; println(&quot;the value has a String type&quot;)&#10;        else -&gt; println(&quot;undefined&quot;)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103394000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="When with Range as a Condition" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;When with Range as a Condition&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan &lt;b&gt;Range&lt;/b&gt; sebagai kondisi dalam When Expression.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4143&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;When Expression&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701061" />
                            <option name="index" value="6" />
                            <option name="name" value="When with Range as a Condition" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val value =  27&#10;    val ranges = 10..50&#10;&#10;    when(value){&#10;        in ranges -&gt; println(&quot;value is in the range&quot;)&#10;        !in ranges -&gt; println(&quot;value is outside the range&quot;)&#10;        else -&gt; println(&quot;value undefined&quot;)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103397000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="When subject" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;When subject&lt;/h1&gt;&#10;Ini adalah contoh kode untuk mendapatkan subject dari sebuah kondisi yang digunakan pada When.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4143&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;When Expression&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701062" />
                            <option name="index" value="7" />
                            <option name="name" value="When subject" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlin.random.Random&#10;&#10;// main function&#10;fun main() {&#10;    val registerNumber = when(val regis = getRegisterNumber()){&#10;        in 1..50 -&gt; 50 * regis&#10;        in 51..100 -&gt; 100 * regis&#10;        else -&gt; regis&#10;    }&#10;&#10;    println(registerNumber)&#10;}&#10;&#10;fun getRegisterNumber() = Random.nextInt(100)" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103400000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226599" />
                      <option name="index" value="3" />
                      <option name="name" value="Expression and Statement" />
                      <option name="updateDate" value="1565103407000" />
                      <option name="unitId" value="199147" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Expression" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Expression&lt;/h1&gt;&#10;Ini adalah contoh sebuah Expression pada Kotlin.&#10;Penjelasan lengkapnya dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4147?from=4143&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Expressions dan Statements&lt;/a&gt;.&#10;&lt;br&gt;&#10;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701066" />
                            <option name="index" value="1" />
                            <option name="name" value="Expression" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val openOffice = 7&#10;    val now = 8&#10;    val office = if (now &gt; openOffice) &quot;Office already open&quot; else &quot;office close&quot;&#10;&#10;    println(office)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103403000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Statement" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Statement&lt;/h1&gt;&#10;Ini adalah contoh sebuah Statement pada Kotlin.&#10;Penjelasan lengkapnya dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4147?from=4143&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Expressions dan Statements&lt;/a&gt;.&#10;&lt;br&gt;&#10;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701067" />
                            <option name="index" value="2" />
                            <option name="name" value="Statement" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;&#10;    val value1 = 10&#10;    val value2 = 10&#10;&#10;    sum(value1, value2)&#10;}&#10;&#10;fun sum(value1: Int, value2: Int) = value1 + value2" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103407000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226600" />
                      <option name="index" value="4" />
                      <option name="name" value="While and Do While" />
                      <option name="updateDate" value="1565103416000" />
                      <option name="unitId" value="199148" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="While" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;While&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan &lt;code&gt;while&lt;/code&gt; untuk perulangan.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4156&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;While dan Do While&lt;/a&gt;.&#10;&lt;br&gt;&#10;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701068" />
                            <option name="index" value="1" />
                            <option name="name" value="While" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    var counter = 1&#10;&#10;    while (counter &lt;= 7){&#10;        println(&quot;Hello, World!&quot;)&#10;        counter++&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103410000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Do While" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Do While&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan &lt;code&gt;do while&lt;/code&gt; untuk perulangan.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4156&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;While dan Do While&lt;/a&gt;.&#10;&lt;br&gt;&#10;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701069" />
                            <option name="index" value="2" />
                            <option name="name" value="Do While" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    var counter = 1&#10;&#10;    do {&#10;        println(&quot;Hello, World!&quot;)&#10;        counter++&#10;    } while (counter &lt;= 7)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103413000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Infinite While" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Infinite While&lt;/h1&gt;&#10;Ini adalah contoh infinite loop ketika menggunakan &lt;code&gt;while&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4156&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;While dan Do While&lt;/a&gt;.&#10;&lt;br&gt;&#10;&lt;br&gt;&#10;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="704389" />
                            <option name="index" value="3" />
                            <option name="name" value="Infinite While" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    var value = 'A'&#10;    do {&#10;        value++&#10;        print(value)&#10;    } while (value &lt;= 'Z')&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103416000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226601" />
                      <option name="index" value="5" />
                      <option name="name" value="Range and For loop" />
                      <option name="updateDate" value="1565103450000" />
                      <option name="unitId" value="199149" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="For Loop" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;For Loop&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan &lt;b&gt;For Loop&lt;/b&gt; untuk perulangan.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4183&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;For Loop&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701152" />
                            <option name="index" value="1" />
                            <option name="name" value="For Loop" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val ranges = 1..5&#10;&#10;    for (i in ranges){&#10;        println(&quot;value is $i!&quot;)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103419000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="For Loop with Range" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;For Loop with Range&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan &lt;b&gt;Range&lt;/b&gt; sebagai kondisi perulangan.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4183&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;For Loop&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701153" />
                            <option name="index" value="2" />
                            <option name="name" value="For Loop with Range" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val ranges = 1.rangeTo(5)&#10;&#10;    for (i in ranges){&#10;        println(&quot;value is $i!&quot;)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103423000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="ForEach" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;ForEach&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan extension &lt;code&gt;ForEach&lt;/code&gt; untuk mempermudah perulangan.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4183&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;For Loop&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701154" />
                            <option name="index" value="3" />
                            <option name="name" value="ForEach" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val ranges = 1.rangeTo(10) step 3&#10;&#10;    ranges.forEach { value -&gt;&#10;        println(&quot;value is $value!&quot;)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103426000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="For Loop Index" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;For Loop Index&lt;/h1&gt;&#10;Ini adalah contoh kode untuk mendapatkan index dari proses perulangan.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4183&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;For Loop&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701155" />
                            <option name="index" value="4" />
                            <option name="name" value="For Loop Index" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val ranges = 1.rangeTo(10) step 3&#10;&#10;    for ((index, value) in ranges.withIndex()) {&#10;        println(&quot;value $value with index $index&quot;)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103429000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="For Loop with Step Extension" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;For Loop with Step Extension&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan ekstensi &lt;code&gt;step&lt;/code&gt; ketika melakukan perulangan dengan &lt;b&gt;Range&lt;/b&gt; sebagai kondisi.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4183&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;For Loop&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701156" />
                            <option name="index" value="5" />
                            <option name="name" value="For Loop with Step Extension" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val ranges = 1.rangeTo(10) step 3&#10;&#10;    for (i in ranges ){&#10;        println(&quot;value is $i!&quot;)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103433000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="ForEachIndexed" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;ForEachIndexed&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan ekstensi &lt;code&gt;ForEachIndexed&lt;/code&gt; untuk mempermudah dalam mendapatkan index ketika proses perulangan.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4183&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;For Loop&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701157" />
                            <option name="index" value="6" />
                            <option name="name" value="ForEachIndexed" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val ranges = 1.rangeTo(10) step 3&#10;&#10;    ranges.forEachIndexed { index, value -&gt;&#10;        println(&quot;value $value with index $index&quot;)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103436000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Range" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Range&lt;/h1&gt;&#10;Ini adalah contoh kode untuk inisialisasi &lt;b&gt;Range&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4176&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Range&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701158" />
                            <option name="index" value="7" />
                            <option name="name" value="Range" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val rangeInt = 1..10&#10;    print(rangeInt.step)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103440000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Range ForEach" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Range ForEach&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan ekstensi &lt;code&gt;ForEach&lt;/code&gt; pada &lt;b&gt;Range&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4176&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Range&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701159" />
                            <option name="index" value="8" />
                            <option name="name" value="Range ForEach" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val rangeInt = 1..10 step 2&#10;&#10;    rangeInt.forEach {&#10;        print(&quot;$it &quot;)&#10;    }&#10;&#10;    println(rangeInt.step)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103443000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Range with `in` Operator" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Range with `in` Operator&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan operator &lt;code&gt;in&lt;/code&gt; pada &lt;b&gt;Range&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4176&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Range&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701160" />
                            <option name="index" value="9" />
                            <option name="name" value="Range with `in` Operator" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val tenToOne = 10.downTo(1)&#10;    if (7 in tenToOne) {&#10;        println(&quot;Value 7 available&quot;)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103446000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Range with `!in` Operator" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Range with `!in` Operator&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan operator &lt;code&gt;!in&lt;/code&gt; pada &lt;b&gt;Range&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4176&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Range&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="704714" />
                            <option name="index" value="10" />
                            <option name="name" value="Range with `!in` Operator" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val tenToOne = 10.downTo(1)&#10;    if (11 !in tenToOne) {&#10;        println(&quot;No value 11 in Range &quot;)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103450000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226602" />
                      <option name="index" value="6" />
                      <option name="name" value="Break and Continue" />
                      <option name="updateDate" value="1565103460000" />
                      <option name="unitId" value="199150" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Continue" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Continue&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan &lt;code&gt;continue&lt;/code&gt; pada proses iterasi.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4176&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Range&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701809" />
                            <option name="index" value="1" />
                            <option name="name" value="Continue" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val listOfInt = listOf(1, 2, 3, null, 5, null, 7)&#10;&#10;    for (i in listOfInt) {&#10;        if (i == null) continue&#10;        print(i)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103453000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Break" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Break&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan &lt;code&gt;break&lt;/code&gt; pada proses iterasi.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4176&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Range&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701810" />
                            <option name="index" value="2" />
                            <option name="name" value="Break" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val listOfInt = listOf(1, 2, 3, null, 5, null, 7)&#10;&#10;    for (i in listOfInt) {&#10;        if (i == null) break&#10;        print(i)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103456000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Labels" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Labels&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan label pada &lt;code&gt;continue&lt;/code&gt; dan &lt;code&gt;break&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4176&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Range&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701811" />
                            <option name="index" value="3" />
                            <option name="name" value="Labels" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    loop@ for (i in 1..10) {&#10;        println(&quot;Outside Loop&quot;)&#10;&#10;        for (j in 1..10) {&#10;            println(&quot;Inside Loop&quot;)&#10;            if ( j &gt; 5) break@loop&#10;        }&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103460000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="265455" />
                      <option name="index" value="7" />
                      <option name="name" value="Latihan" />
                      <option name="updateDate" value="1571195544000" />
                      <option name="unitId" value="246413" />
                      <option name="items">
                        <list>
                          <OutputTask>
                            <option name="customPresentableName" value="Latihan" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Latihan&lt;/h1&gt;&#10;Lengkapi potongan kode pada program sederhana di samping agar dapat berjalan dengan baik.&#10;&lt;br&gt;&#10;&lt;br&gt;&#10;&lt;b&gt;&lt;i&gt;TODO 1 :&lt;/i&gt;&lt;/b&gt;&lt;br&gt;Lengkapi dengan ekspresi jika nilai &lt;code&gt;number&lt;/code&gt; bernilai genap maka proses iterasi akan dilewatkan.&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;b&gt;&lt;i&gt;TODO 2 :&lt;/i&gt;&lt;/b&gt;&lt;br&gt;Lengkapi dengan ekspresi jika nilai &lt;code&gt;number&lt;/code&gt; bernilai lebih dari &lt;b&gt;10&lt;/b&gt; maka proses iterasi akan dihentikan.&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;b&gt;&lt;i&gt;TODO 3 :&lt;/i&gt;&lt;/b&gt;&lt;br&gt;Lengkapi inisialisasi variable &lt;code&gt;result&lt;/code&gt; dengan rumus perhitungan berikut:&lt;br&gt;&#10;&lt;pre&gt;number x ( number + 2 )&lt;/pre&gt;&#10;&#10;Jika dijalankan konsol akan menampilkan teks seperti berikut:&#10;&lt;pre&gt;result is 3&#10;result is 15&#10;result is 35&#10;result is 63&#10;result is 99&lt;/pre&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878021" />
                            <option name="index" value="1" />
                            <option name="name" value="Latihan" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    val listNumber = 1.rangeTo(30)&#10;&#10;    for (number in listNumber) {&#10;        // TODO 1&#10;        if (false) continue&#10;&#10;        // TODO 2&#10;        if (false) break&#10;&#10;        // TODO 3&#10;        val result = 0&#10;        println(&quot;result is $result&quot;)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="test/output.txt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/output.txt" />
                                      <option name="text" value="result is 3&#10;result is 15&#10;result is 35&#10;result is 63&#10;result is 99" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193388000" />
                          </OutputTask>
                        </list>
                      </option>
                    </Lesson>
                  </list>
                </option>
              </Section>
              <Section>
                <option name="courseId" value="54217" />
                <option name="customPresentableName" />
                <option name="id" value="84610" />
                <option name="index" value="4" />
                <option name="name" value="Data Class dan Collections" />
                <option name="position" value="4" />
                <option name="updateDate" value="1571195551000" />
                <option name="items">
                  <list>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226707" />
                      <option name="index" value="1" />
                      <option name="name" value="Data Class" />
                      <option name="updateDate" value="1565103492000" />
                      <option name="unitId" value="199255" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Data Class" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Data Class&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana inisialisasi &lt;b&gt;data class&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4210&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Data Class&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701514" />
                            <option name="index" value="1" />
                            <option name="name" value="Data Class" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="data class DataUser(val name : String, val age : Int)&#10;&#10;fun main() {&#10;    println(&quot;Data Class&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103473000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Different data class with class" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Different data class with class&lt;/h1&gt;&#10;Ini adalah contoh kode perbedaan antara penggunaan &lt;b&gt;data class&lt;/b&gt; dan &lt;b&gt;class&lt;/b&gt; pada umumnya.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4210&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Data Class&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701813" />
                            <option name="index" value="2" />
                            <option name="name" value="Different data class with class" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="class User(val name : String, val age : Int)&#10;&#10;data class DataUser(val name : String, val age : Int)&#10;&#10;fun main(){&#10;    val user = User(&quot;nrohmen&quot;, 17)&#10;    val dataUser = DataUser(&quot;nrohmen&quot;, 17)&#10;&#10;    println(user)&#10;    println(dataUser)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103476000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Comparing data class" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Comparing data class&lt;/h1&gt;&#10;Ini adalah contoh kode komparasi antara 2 buah objek &lt;b&gt;data class&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4210&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Data Class&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701814" />
                            <option name="index" value="3" />
                            <option name="name" value="Comparing data class" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="data class DataUser(val name : String, val age : Int)&#10;&#10;fun main(){&#10;    val dataUser = DataUser(&quot;nrohmen&quot;, 17)&#10;    val dataUser2 = DataUser(&quot;nrohmen&quot;, 17)&#10;    val dataUser3 = DataUser(&quot;dimas&quot;, 24)&#10;&#10;    println(dataUser.equals(dataUser2))&#10;    println(dataUser.equals(dataUser3))&#10;&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103479000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Copying data class objects" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Copying data class objects&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana cara menyalin sebuah objek ketika menggunakan &lt;b&gt;data class&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4219&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Menyalin dan Memodifikasi Data Class&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701830" />
                            <option name="index" value="4" />
                            <option name="name" value="Copying data class objects" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="data class DataUser(val name : String, val age : Int)&#10;&#10;fun main(){&#10;    val dataUser = DataUser(&quot;nrohmen&quot;, 17)&#10;    val dataUser2 = DataUser(&quot;nrohmen&quot;, 17)&#10;    val dataUser3 = DataUser(&quot;dimas&quot;, 24)&#10;    val dataUser4 = dataUser.copy()&#10;&#10;    println(dataUser4)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103483000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Modify the data class object" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Modify the data class object&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana cara memodifikasi nilai dari sebuah objek ketika menggunakan &lt;b&gt;data class&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4219&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Menyalin dan Memodifikasi Data Class&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701831" />
                            <option name="index" value="5" />
                            <option name="name" value="Modify the data class object" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="data class DataUser(val name : String, val age : Int)&#10;&#10;fun main(){&#10;    val dataUser = DataUser(&quot;nrohmen&quot;, 17)&#10;    val dataUser2 = DataUser(&quot;nrohmen&quot;, 17)&#10;    val dataUser3 = DataUser(&quot;dimas&quot;, 24)&#10;    val dataUser4 = dataUser.copy()&#10;    val dataUser5 = dataUser.copy(age = 18)&#10;&#10;    println(dataUser4)&#10;    println(dataUser5)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103486000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Destructuring Declarations" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Destructuring Declarations&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana cara memetakan objek menjadi sebuah variable pada &lt;b&gt;data class&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4236&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Destructuring Declarations&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701832" />
                            <option name="index" value="6" />
                            <option name="name" value="Destructuring Declarations" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="data class DataUser(val name : String, val age : Int)&#10;&#10;fun main(){&#10;    val dataUser = DataUser(&quot;nrohmen&quot;, 17)&#10;&#10;    val name = dataUser.component1()&#10;    val age = dataUser.component2()&#10;&#10;    println(&quot;My name is $name, I am $age years old&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103489000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Create variables based on data class objects" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Create variables based on data class objects&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana cara membuat beberapa variable dari objek secara langsung.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4236&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Destructuring Declarations&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701833" />
                            <option name="index" value="7" />
                            <option name="name" value="Create variables based on data class objects" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="data class DataUser(val name : String, val age : Int)&#10;&#10;fun main(){&#10;    val dataUser = DataUser(&quot;nrohmen&quot;, 17)&#10;    val (name, age) = dataUser&#10;&#10;    println(&quot;My name is $name, I am $age years old&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103492000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226708" />
                      <option name="index" value="2" />
                      <option name="name" value="Collections" />
                      <option name="updateDate" value="1565103502000" />
                      <option name="unitId" value="199256" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Collections" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Collections&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisasi beberapa objek &lt;b&gt;Collections&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4239&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Collections&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701515" />
                            <option name="index" value="1" />
                            <option name="name" value="Collections" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="class User&#10;&#10;fun main() {&#10;    val numberList = listOf(1, 2, 3, 4, 5)&#10;    val charList = listOf('a', 'b', 'c')&#10;&#10;    val anyList = listOf('a', &quot;Kotlin&quot;, 3, true, User())&#10;&#10;    println(anyList[3])&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103495000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Sets" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Sets&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisasi, komparasi, dan penggunaan ekstensi &lt;code&gt;union&lt;/code&gt; dan &lt;code&gt;intersect&lt;/code&gt; pada objek &lt;b&gt;Sets&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4240&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Sets&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701858" />
                            <option name="index" value="2" />
                            <option name="name" value="Sets" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val integerSet = setOf(1, 2, 4, 2, 1, 5)&#10;    println(integerSet)&#10;&#10;    val setA = setOf(1, 2, 4, 2, 1, 5)&#10;    val setB = setOf(1, 2, 4, 5)&#10;    println(setA == setB)&#10;&#10;    println(5 in setA)&#10;&#10;    val setC = setOf(1, 5, 7)&#10;    val union = setA.union(setC)&#10;    val intersect = setA.intersect(setC)&#10;&#10;    println(union)&#10;    println(intersect)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103498000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Maps" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Maps&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisasi dan bagaimana cara mendapatkan nilai yang berada di dalam objek &lt;b&gt;Maps&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4243&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Maps&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701859" />
                            <option name="index" value="3" />
                            <option name="name" value="Maps" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="fun main() {&#10;    val capital = mapOf(&#10;            &quot;Jakarta&quot; to &quot;Indonesia&quot;,&#10;            &quot;London&quot; to &quot;England&quot;,&#10;            &quot;New Delhi&quot; to &quot;India&quot;&#10;    )&#10;&#10;    println(capital[&quot;Jakarta&quot;])&#10;    println(capital.getValue(&quot;Jakarta&quot;))&#10;&#10;    val mapKeys = capital.keys&#10;    val mapValues = capital.values&#10;&#10;    println(mapKeys)&#10;    println(mapValues)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103502000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226794" />
                      <option name="index" value="3" />
                      <option name="name" value="Collections Operations" />
                      <option name="updateDate" value="1565103525000" />
                      <option name="unitId" value="199330" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="filter and filterNot" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;filter() and filterNot()&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan fungsi &lt;code&gt;filter&lt;/code&gt; dan &lt;code&gt;filterNot&lt;/code&gt; untuk menyaring suatu data dalam sebuah &lt;b&gt;Collections&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4245&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Collections Operations&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="704105" />
                            <option name="index" value="1" />
                            <option name="name" value="filter and filterNot" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val numberList = listOf(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)&#10;&#10;    val evenList = numberList.filter { it % 2 == 0 }&#10;    val notEvenList = numberList.filterNot { it % 2 == 0 }&#10;&#10;    println(evenList)&#10;    println(notEvenList)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103505000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="map" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;map()&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan fungsi &lt;code&gt;map&lt;/code&gt; untuk membuat &lt;b&gt;Collection&lt;/b&gt; baru sesuai dengan perubahan yang dilakukan dari &lt;b&gt;Collection&lt;/b&gt; sebelumnya.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4245&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Collections Operations&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="704106" />
                            <option name="index" value="2" />
                            <option name="name" value="map" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val numberList = listOf(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)&#10;    val multipliedBy5 = numberList.map { it * 5 }&#10;&#10;    println(multipliedBy5)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103508000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="count" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;count()&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan fungsi &lt;code&gt;count&lt;/code&gt; untuk menghitung jumlah item yang ada di dalam &lt;b&gt;Collection&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4245&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Collections Operations&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="704107" />
                            <option name="index" value="3" />
                            <option name="name" value="count" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val numberList = listOf(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)&#10;&#10;    print(numberList.count())&#10;    print(numberList.count { it % 3 == 0 })&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103511000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="find" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;find()&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan fungsi &lt;code&gt;find&lt;/code&gt; untuk mencari item pada sebuah &lt;b&gt;Collection&lt;/b&gt;.&#10;Penjelasan dan contoh untuk fungsi lainnya seperti &lt;code&gt;firstOrNull&lt;/code&gt; dan &lt;code&gt;lastOrNull&lt;/code&gt; dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4245&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Collections Operations&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="704108" />
                            <option name="index" value="4" />
                            <option name="name" value="find" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val numberList = listOf(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)&#10;    val firstOddNumber = numberList.find { it % 2 == 1 }&#10;&#10;    println(firstOddNumber)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103515000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="first" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;first() &amp;amp; last()&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan fungsi &lt;code&gt;first&lt;/code&gt; untuk menyaring item pertama pada sebuah &lt;b&gt;Collection&lt;/b&gt;.&#10;Penjelasan dan contoh untuk fungsi &lt;code&gt;last&lt;/code&gt; dapat Anda lihat pada modul&lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4245&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Collections Operations&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="704109" />
                            <option name="index" value="5" />
                            <option name="name" value="first" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val numberList = listOf(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)&#10;    val moreThan10 = numberList.first { it &gt; 10 }&#10;    print(moreThan10)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103519000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="sum" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;sum()&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan fungsi &lt;code&gt;sum&lt;/code&gt; untuk menjumlahkan setiap data yang ada pada &lt;b&gt;Collection&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4245&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Collections Operations&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="704110" />
                            <option name="index" value="6" />
                            <option name="name" value="sum" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val numberList = listOf(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)&#10;    val total = numberList.sum()&#10;&#10;    println(total)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103522000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="sorted" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;sorted()&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan fungsi &lt;code&gt;sorted&lt;/code&gt; untuk mengurutkan data secara &lt;i&gt;ascending&lt;/i&gt; atau &lt;i&gt;descending&lt;/i&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4245&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Collections Operations&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="704111" />
                            <option name="index" value="7" />
                            <option name="name" value="sorted" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val kotlinChar = listOf('k', 'o', 't', 'l', 'i', 'n')&#10;    val ascendingSort = kotlinChar.sorted()&#10;    val descendingSort = kotlinChar.sortedDescending()&#10;&#10;    println(ascendingSort)&#10;    println(descendingSort)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103525000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="265456" />
                      <option name="index" value="4" />
                      <option name="name" value="Sequences" />
                      <option name="updateDate" value="1571195548000" />
                      <option name="unitId" value="246414" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Sequences Initialization" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;Sequences Initialization&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana inisialisasi &lt;b&gt;sequences&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4248&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Sequences&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878022" />
                            <option name="index" value="1" />
                            <option name="name" value="Sequences Initialization" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    val list = (1..1000000).toList()&#10;    list.asSequence().filter { it % 5 == 0 }.map { it + it }.forEach { println(it) }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193395000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Sequences Initialization with generateSequence" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;Sequences Initialization with generateSequences&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana inisialisasi &lt;b&gt;sequences&lt;/b&gt; dengan memanfaatkan fungsi &lt;code&gt;generateSequences&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4248&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Sequences&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878023" />
                            <option name="index" value="2" />
                            <option name="name" value="Sequences Initialization with generateSequence" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    val sequenceNumber = generateSequence(1) { it + 1 }&#10;    sequenceNumber.take(5).forEach { print(&quot;$it &quot;) }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193397000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="265457" />
                      <option name="index" value="5" />
                      <option name="name" value="Latihan" />
                      <option name="updateDate" value="1571195551000" />
                      <option name="unitId" value="246415" />
                      <option name="items">
                        <list>
                          <OutputTask>
                            <option name="customPresentableName" value="latihan" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;Latihan&lt;/h1&gt;&#10;Lengkapi potongan kode pada program sederhana di samping agar dapat berjalan dengan baik.&#10;&lt;br&gt;&#10;&lt;br&gt;&#10;&lt;b&gt;&lt;i&gt;TODO 1 :&lt;/i&gt;&lt;/b&gt;&lt;br&gt;Lengkapi dengan kode untuk inisialisasi objek &lt;b&gt;user&lt;/b&gt; dengan ketentuan &lt;code&gt;key&lt;/code&gt; dan &lt;code&gt;value&lt;/code&gt; sebagai berikut:&#10;&lt;ul&gt;&#10;  &lt;li&gt;&#10;    name = John&#10;  &lt;/li&gt;&#10;  &lt;li&gt;&#10;    age = 23&#10;  &lt;/li&gt;&#10;  &lt;li&gt;&#10;    address = St. Petersburg&#10;  &lt;/li&gt;&#10;&lt;/ul&gt;&#10;&lt;b&gt;&lt;i&gt;TODO 2 :&lt;/i&gt;&lt;/b&gt;&lt;br&gt;Lengkapi kode pada fungsi &lt;code&gt;getValue()&lt;/code&gt; untuk mendapatkan nilai dari objek &lt;code&gt;user&lt;/code&gt;.&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;b&gt;&lt;i&gt;TODO 3 :&lt;/i&gt;&lt;/b&gt;&lt;br&gt;Tambahkan fungsi untuk mencetak teks berikut pada konsol:&#10;&lt;br&gt;&#10;&lt;pre&gt;User&#10;Name: John&#10;Age: 23&#10;Address: St. Petersburg&#10;&lt;/pre&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878024" />
                            <option name="index" value="1" />
                            <option name="name" value="latihan" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;&#10;    // TODO 1&#10;    val user = mapOf&lt;String, String&gt;()&#10;&#10;    // TODO 2&#10;    val name = user.getValue(&quot;&quot;)&#10;    val age = user.getValue(&quot;&quot;)&#10;    val address = user.getValue(&quot;&quot;)&#10;&#10;    // TODO 3&#10;    println()&#10;&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="test/output.txt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/output.txt" />
                                      <option name="text" value="User&#10;Name: John&#10;Age: 23&#10;Address: St. Petersburg&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193402000" />
                          </OutputTask>
                        </list>
                      </option>
                    </Lesson>
                  </list>
                </option>
              </Section>
              <Section>
                <option name="courseId" value="54217" />
                <option name="customPresentableName" />
                <option name="id" value="84611" />
                <option name="index" value="5" />
                <option name="name" value="Functional" />
                <option name="position" value="5" />
                <option name="updateDate" value="1571195585000" />
                <option name="items">
                  <list>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226710" />
                      <option name="index" value="1" />
                      <option name="name" value="Named and Default Argument" />
                      <option name="updateDate" value="1565103544000" />
                      <option name="unitId" value="199258" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 1" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Named Argument&lt;/h1&gt;&#10;Ini adalah contoh kode pemanggilan fungsi memanfaatkan &lt;b&gt;named argument&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4355&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Named dan Default Argument&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="706214" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh 1" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val fullName = getFullName(first = &quot;Kotlin&quot; , middle = &quot; is &quot;, last = &quot;Awesome&quot;)&#10;    print(fullName)&#10;}&#10;&#10;fun getFullName(first: String, middle: String, last: String): String {&#10;    return &quot;$first $middle $last&quot;&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103535000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 2" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Named Argument&lt;/h1&gt;&#10;Ini adalah contoh kode pemanggilan fungsi dengan mengubah posisi argumen memanfaatkan &lt;b&gt;named argument&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4355&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Named dan Default Argument&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="706216" />
                            <option name="index" value="2" />
                            <option name="name" value="Contoh 2" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val fullName = getFullName(middle = &quot; is &quot; , first = &quot;Kotlin&quot;, last = &quot;Awesome&quot;)&#10;    print(fullName)&#10;}&#10;&#10;fun getFullName(first: String, middle: String, last: String): String {&#10;    return &quot;$first $middle $last&quot;&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103538000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 3" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Default Argument&lt;/h1&gt;&#10;Ini adalah contoh kode deklarasi dan pemanggilan sebuah fungsi yang memanfaatkan &lt;b&gt;default argument&lt;/b&gt; tanpa menyematkan argumen.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4355&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Named dan Default Argument&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="706218" />
                            <option name="index" value="3" />
                            <option name="name" value="Contoh 3" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val fullName = getFullName()&#10;    print(fullName)&#10;}&#10;&#10;fun getFullName(first: String = &quot;Kotlin&quot;, middle: String = &quot; is &quot;, last: String = &quot;Awesome&quot;): String {&#10;    return &quot;$first $middle $last&quot;&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103541000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 4" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Default Argument&lt;/h1&gt;&#10;Ini adalah contoh kode pemanggilan sebuah fungsi yang memanfaatkan &lt;b&gt;default argument&lt;/b&gt; dengan menyematkan argumen.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4355&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Named dan Default Argument&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="706219" />
                            <option name="index" value="4" />
                            <option name="name" value="Contoh 4" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val fullName = getFullName(first = &quot;Dicoding&quot;)&#10;    print(fullName)&#10;}&#10;&#10;fun getFullName(first: String = &quot;Kotlin&quot;, middle: String = &quot; is &quot;, last: String = &quot;Awesome&quot;): String {&#10;    return &quot;$first $middle $last&quot;&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103544000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226711" />
                      <option name="index" value="2" />
                      <option name="name" value="Vararg Argument" />
                      <option name="updateDate" value="1565103554000" />
                      <option name="unitId" value="199259" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 1" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Vararg Argument&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisasi dan pemanggilan fungsi yang memanfaatkan &lt;b&gt;vararg argument&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4356&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Vararg Argument&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701519" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh 1" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val number = sumNumbers(10, 20, 30, 40)&#10;    print(number)&#10;}&#10;&#10;fun sumNumbers(vararg number: Int): Int {&#10;    return number.sum()&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103547000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 2" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Vararg Argument&lt;/h1&gt;&#10;Ini adalah contoh aturan penggunaan &lt;b&gt;vararg argument&lt;/b&gt; pada parameter suatu fungsi.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4356&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Vararg Argument&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="706240" />
                            <option name="index" value="2" />
                            <option name="name" value="Contoh 2" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    sets(10, 10, name = &quot;Kotlin&quot;)&#10;}&#10;&#10;fun sets(vararg number: Int, name: String): Int {&#10;    println(name)&#10;    return number.sum()&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103550000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 3" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Spread Operator&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan &lt;i&gt;spread operator&lt;/i&gt; ketika menyematkan argumen berupa Array untuk parameter yang ditandai dengan &lt;code&gt;vararg&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4356&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Vararg Argument&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="706241" />
                            <option name="index" value="3" />
                            <option name="name" value="Contoh 3" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val number = intArrayOf(10, 20, 30, 40)&#10;    sets(10, 20, 20, *number , 10)&#10;}&#10;&#10;fun sets(vararg number: Int): Int {&#10;    return number.sum()&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103554000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226712" />
                      <option name="index" value="3" />
                      <option name="name" value="Extensions" />
                      <option name="updateDate" value="1566873809000" />
                      <option name="unitId" value="199260" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 1" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Extension Function&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisasi &lt;b&gt;extension function&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4359&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Extension&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701520" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh 1" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    10.printInt()&#10;}&#10;&#10;fun Int.printInt() {&#10;    print(&quot;value $this&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103557000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 2" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Extension Function&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisasi &lt;b&gt;extension function&lt;/b&gt; yang dapat mengembalikan nilai.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4359&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Extension&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="706245" />
                            <option name="index" value="2" />
                            <option name="name" value="Contoh 2" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    println(10.plusThree())&#10;}&#10;&#10;fun Int.plusThree(): Int {&#10;    return this + 3&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103560000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 3" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Extension Property&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisasi &lt;b&gt;extension property&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4359&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Extension&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="706246" />
                            <option name="index" value="3" />
                            <option name="name" value="Contoh 3" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    println(10.slice)&#10;}&#10;&#10;val Int.slice: Int&#10;    get() = this / 2" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103563000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 4" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Nullable Receiver&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisasi &lt;b&gt;extension property&lt;/b&gt; dengan &lt;i&gt;nullable receiver&lt;/i&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4359&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Extension&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="706248" />
                            <option name="index" value="4" />
                            <option name="name" value="Contoh 4" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val value: Int? = null&#10;&#10;    println(value.slice)&#10;}&#10;&#10;val Int?.slice: Int&#10;    get() = this?.div(2) ?: 0" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1566873809000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226713" />
                      <option name="index" value="4" />
                      <option name="name" value="Lambda" />
                      <option name="updateDate" value="1565103582000" />
                      <option name="unitId" value="199261" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 1" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Lambda&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisasi &lt;b&gt;lambda&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4366&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Lambda&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701521" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh 1" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    printMessage(&quot;Hello From Lambda&quot;)&#10;}&#10;&#10;val printMessage = { message: String -&gt; println(message) }" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103570000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 2" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Lambda&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisasi &lt;b&gt;lambda&lt;/b&gt; yang dapat mengembalikan nilai.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4366&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Lambda&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="706838" />
                            <option name="index" value="2" />
                            <option name="name" value="Contoh 2" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val length = messageLength(&quot;Hello From lambda&quot;)&#10;    println(&quot;Message length $length&quot;)&#10;}&#10;&#10;val messageLength = { message: String -&gt; message.length }" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103573000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 3" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;High-Order Function&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisasi dan penggunaan &lt;b&gt;high-order function&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4365&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;High-Order Function&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="706839" />
                            <option name="index" value="3" />
                            <option name="name" value="Contoh 3" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    printResult(10 ,sum)&#10;}&#10;&#10;fun printResult(value: Int, sum: (Int) -&gt; Int) {&#10;    val result = sum(value)&#10;    println(result)&#10;}&#10;&#10;var sum: (Int) -&gt; Int = { value -&gt; value + value }" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103576000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 4" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;High-Order Function&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan &lt;b&gt;high-order function&lt;/b&gt; dengan menyematkan secara langsung &lt;b&gt;lambda&lt;/b&gt; sebagai argumen.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4365&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;High-Order Function&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="706840" />
                            <option name="index" value="4" />
                            <option name="name" value="Contoh 4" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    printResult(10){ value -&gt;&#10;        value + value&#10;    }&#10;}&#10;&#10;fun printResult(value: Int, sum: (Int) -&gt; Int) {&#10;    val result = sum(value)&#10;    println(result)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103579000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 5" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Lambda Receiver&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisai dan penggunaan &lt;b&gt;lambda receiver&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4366&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Lambda with Receiver&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="706841" />
                            <option name="index" value="5" />
                            <option name="name" value="Contoh 5" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val message = buildString {&#10;        append(&quot;Hello &quot;)&#10;        append(&quot;from &quot;)&#10;        append(&quot;lambda &quot;)&#10;    }&#10;&#10;    println(message)&#10;}&#10;&#10;fun buildString(action: StringBuilder.() -&gt; Unit): String {&#10;    val stringBuilder = StringBuilder()&#10;    stringBuilder.action()&#10;    return stringBuilder.toString()&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103582000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226714" />
                      <option name="index" value="5" />
                      <option name="name" value="Function Type" />
                      <option name="updateDate" value="1565103592000" />
                      <option name="unitId" value="199262" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 1" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Function Type&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisasi dan penggunaan &lt;b&gt;function type&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4368&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Function Type&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701522" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh 1" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="val sum: (Int, Int) -&gt; Int = { valueA, valueB -&gt; valueA + valueB }&#10;&#10;val multiply: (Int, Int) -&gt; Int = { valueA, valueB -&gt; valueA * valueB }&#10;&#10;fun main() {&#10;    val sumResult = sum.invoke(10, 10)&#10;    val multiplyResult = multiply.invoke(20, 20)&#10;&#10;    println(sumResult)&#10;    println(multiplyResult)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103586000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 2" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;typealias&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisasi &lt;b&gt;function type&lt;/b&gt; memanfaatkan kata kunci &lt;code&gt;typealias&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4368&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Function Type&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="707356" />
                            <option name="index" value="2" />
                            <option name="name" value="Contoh 2" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="typealias Arithmetic = (Int, Int) -&gt; Int&#10;&#10;val sum: Arithmetic = { valueA, valueB -&gt; valueA + valueB }&#10;&#10;val multiply: Arithmetic = { valueA, valueB -&gt; valueA * valueB }&#10;&#10;fun main() {&#10;    val sumResult = sum.invoke(10, 10)&#10;    val multiplyResult = multiply.invoke(20, 20)&#10;&#10;    println(sumResult)&#10;    println(multiplyResult)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103589000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 3" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Nullable Function Type&lt;/h1&gt;&#10;Ini adalah contoh kode untuk menandai &lt;b&gt;function type&lt;/b&gt; sebagai &lt;i&gt;nullable&lt;/i&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4366&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Lambda&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="707357" />
                            <option name="index" value="3" />
                            <option name="name" value="Contoh 3" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="typealias Arithmetic = ((Int, Int) -&gt; Int)?&#10;&#10;val sum: Arithmetic = { valueA, valueB -&gt; valueA + valueB }&#10;&#10;val multiply: Arithmetic = { valueA, valueB -&gt; valueA * valueB }&#10;&#10;fun main() {&#10;    val sumResult = sum?.invoke(10, 10)&#10;    val multiplyResult = multiply?.invoke(20, 20)&#10;&#10;    println(sumResult)&#10;    println(multiplyResult)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103592000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226715" />
                      <option name="index" value="6" />
                      <option name="name" value="Library Helper" />
                      <option name="updateDate" value="1565103608000" />
                      <option name="unitId" value="199263" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="run" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;run()&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan fungi &lt;code&gt;run&lt;/code&gt; untuk inisialisasi dan perhitungan nilai kembalian.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4372&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Scope Function with Lambda Receiver&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701523" />
                            <option name="index" value="1" />
                            <option name="name" value="run" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val text = &quot;Hello&quot;&#10;    val result = text.run {&#10;        val from = this&#10;        val to = this.replace(&quot;Hello&quot;, &quot;Kotlin&quot;)&#10;        &quot;replace text from $from to $to&quot;&#10;    }&#10;    println(&quot;result : $result&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103595000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="with" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;with()&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan fungi &lt;code&gt;with&lt;/code&gt; dalam menggunakan konteks objeknya.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4372&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Scope Function with Lambda Receiver&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="707360" />
                            <option name="index" value="2" />
                            <option name="name" value="with" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val message = &quot;Hello Kotlin!&quot;&#10;    val result = with(message) {&#10;        &quot;First character is ${this[0]}&quot; +&#10;                &quot; and last character is ${this[this.length - 1]}&quot;&#10;    }&#10;&#10;    println(result)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103598000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="apply" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;apply()&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan fungi &lt;code&gt;apply&lt;/code&gt; untuk inisialisasi konteks objeknya.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4372&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Scope Function with Lambda Receiver&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="707361" />
                            <option name="index" value="3" />
                            <option name="name" value="apply" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// type your solution here&#10;&#10;fun main() {&#10;    val message = StringBuilder().apply {&#10;        append(&quot;Hello &quot;)&#10;        append(&quot;Kotlin!&quot;)&#10;    }&#10;&#10;    println(message.toString())&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103602000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="let" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;let()&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan fungi &lt;code&gt;let&lt;/code&gt; untuk menjalankan &lt;b&gt;lambda&lt;/b&gt; pada objek yang bertipe &lt;b&gt;non-null&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4374&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Scope Function with Lambda Argument&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="707362" />
                            <option name="index" value="4" />
                            <option name="name" value="let" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val message: String? = null&#10;    message?.let {&#10;        val length = it.length * 2&#10;        val text = &quot;text length $length&quot;&#10;        println(text)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103605000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="also" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;also()&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan fungi &lt;code&gt;also&lt;/code&gt; untuk inisialisasi konteks objeknya.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4374&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Scope Function with Lambda Argument&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="707363" />
                            <option name="index" value="5" />
                            <option name="name" value="also" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val text = &quot;Hello Kotlin&quot;&#10;    val result = text.also {&#10;        println(&quot;value length -&gt; ${it.length}&quot;)&#10;    }&#10;&#10;    println(&quot;text -&gt; $result&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103608000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="265458" />
                      <option name="index" value="7" />
                      <option name="name" value="Scope Function with Lambda Receiver" />
                      <option name="updateDate" value="1571195558000" />
                      <option name="unitId" value="246416" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="run" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;run&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana menggunakan fungsi &lt;b&gt;run&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4372&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Scope Function with Lambda Receiver&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878025" />
                            <option name="index" value="1" />
                            <option name="name" value="run" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    val text = &quot;Hello&quot;&#10;    val result = text.run {&#10;        val from = this&#10;        val to = this.replace(&quot;Hello&quot;, &quot;Kotlin&quot;)&#10;        &quot;replace text from $from to $to&quot;&#10;    }&#10;    println(&quot;result : $result&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193407000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="with" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;with&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana menggunakan fungsi &lt;b&gt;with&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4372&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Scope Function with Lambda Receiver&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878026" />
                            <option name="index" value="2" />
                            <option name="name" value="with" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    val message = &quot;Hello Kotlin!&quot;&#10;    val result = with(message) {&#10;        &quot;First character is ${this[0]}&quot; +&#10;                &quot; and last character is ${this[this.length - 1]}&quot;&#10;    }&#10;&#10;    println(result)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193409000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="apply" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;apply&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana menggunakan fungsi &lt;b&gt;apply&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4372&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Scope Function with Lambda Receiver&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878027" />
                            <option name="index" value="3" />
                            <option name="name" value="apply" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    val message = StringBuilder().apply {&#10;        append(&quot;Hello &quot;)&#10;        append(&quot;Kotlin!&quot;)&#10;    }&#10;&#10;    println(message.toString())&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193411000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="265459" />
                      <option name="index" value="8" />
                      <option name="name" value="Scope Function with Lambda Argument" />
                      <option name="updateDate" value="1571195562000" />
                      <option name="unitId" value="246417" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="let" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;let&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana menggunakan fungsi &lt;b&gt;let&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4374&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Scope Function with Lambda Argument&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878028" />
                            <option name="index" value="1" />
                            <option name="name" value="let" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    val message: String? = null&#10;    message?.let {&#10;        val length = it.length * 2&#10;        val text = &quot;text length $length&quot;&#10;        println(text)&#10;    }.run {&#10;        val text = &quot;message is null&quot;&#10;        println(text)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193416000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="also" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;also&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana menggunakan fungsi &lt;b&gt;also&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4374&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Scope Function with Lambda Argument&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878029" />
                            <option name="index" value="2" />
                            <option name="name" value="also" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    val text = &quot;Hello Kotlin&quot;&#10;    val result = text.also {&#10;        println(&quot;value length -&gt; ${it.length}&quot;)&#10;    }&#10;&#10;    println(&quot;text -&gt; $result&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193418000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="265460" />
                      <option name="index" value="9" />
                      <option name="name" value="Member References" />
                      <option name="updateDate" value="1571195569000" />
                      <option name="unitId" value="246418" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Function References" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;Function References&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana mereferensikan sebuah fungsi.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4532&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Member references&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878030" />
                            <option name="index" value="1" />
                            <option name="name" value="Function References" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    val numbers = 1.rangeTo(10)&#10;    val evenNumbers = numbers.filter(Int::isEvenNumber)&#10;&#10;    println(evenNumbers)&#10;}&#10;&#10;fun Int.isEvenNumber() = this % 2 == 0" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193424000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Property References" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;Property References&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana mereferensikan sebuah property.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4532&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Member references&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878031" />
                            <option name="index" value="2" />
                            <option name="name" value="Property References" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="var message = &quot;Kotlin&quot;&#10;&#10;fun main() {&#10;    println(::message.name)&#10;    println(::message.get())&#10;&#10;    ::message.set(&quot;Kotlin Academy&quot;)&#10;&#10;    println(::message.get())&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193426000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="265461" />
                      <option name="index" value="10" />
                      <option name="name" value="Function Inside Function" />
                      <option name="updateDate" value="1571195573000" />
                      <option name="unitId" value="246419" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Inner function" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;Inner Function&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana mendeklarasi sebuah funcsi di dalam sebuah fungsi.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4535&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Function Inside Function&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878033" />
                            <option name="index" value="1" />
                            <option name="name" value="Inner function" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun sum(valueA: Int, valueB: Int, valueC: Int): Int {&#10;    fun Int.validateNumber(){&#10;        if (this == 0) {&#10;            throw IllegalArgumentException(&quot;value must be better than 0&quot;)&#10;        }&#10;    }&#10;&#10;    valueA.validateNumber()&#10;    valueB.validateNumber()&#10;    valueC.validateNumber()&#10;&#10;    return valueA + valueB&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193433000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="265462" />
                      <option name="index" value="11" />
                      <option name="name" value="Advanced Collection Function" />
                      <option name="updateDate" value="1571195577000" />
                      <option name="unitId" value="246420" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Fold" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;Fold&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana melakukan perhitungan setiap nilai yang berada di dalam sebuah collection tanpa harus melakukan iterasi item tersebut satu-persatu menggunakan fungsi &lt;code&gt;fold&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4537&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Advanced Collection Function&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878034" />
                            <option name="index" value="1" />
                            <option name="name" value="Fold" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    val numbers = listOf(1, 2, 3)&#10;    val fold = numbers.foldRight(10) { item, current -&gt;&#10;        println(&quot;current $current&quot;)&#10;        println(&quot;item $item&quot;)&#10;        println()&#10;        item + current&#10;    }&#10;&#10;    println(&quot;Fold result: $fold&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193439000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Drop" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;Drop&lt;/h1&gt;&#10;Ini adalah contoh kode menggunakan fungsi &lt;code&gt;drop&lt;/code&gt; yang dapat dimanfaatkan untuk memangkas item yang berada di dalam sebuah objek collection berdasarkan jumlah .&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4537&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Advanced Collection Function&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878035" />
                            <option name="index" value="2" />
                            <option name="name" value="Drop" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    val number = listOf(1, 2, 3, 4, 5, 6)&#10;    val drop = number.dropLast(3)&#10;&#10;    println(drop)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193442000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Take" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;Take&lt;/h1&gt;&#10;Ini adalah contoh kode menggunakan fungsi &lt;code&gt;take&lt;/code&gt; yang dapat dimanfaatkan untuk menyaring item yang berada di dalam sebuah objek collection.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4537&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Advanced Collection Function&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878036" />
                            <option name="index" value="3" />
                            <option name="name" value="Take" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    val total = listOf(1, 2, 3, 4, 5, 6)&#10;    val take = total.takeLast(3)&#10;&#10;    println(take)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193444000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Slice" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;Slice&lt;/h1&gt;&#10;Ini adalah contoh kode menggunakan fungsi &lt;code&gt;slice&lt;/code&gt; yang dapat dimanfaatkan untuk menyaring item yang berada di dalam sebuah objek collection pada posisi tertentu.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4540&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Advanced Collection Function (Lanjutan)&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878037" />
                            <option name="index" value="4" />
                            <option name="name" value="Slice" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    val index = listOf(2, 3, 5, 8)&#10;    val total = listOf(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)&#10;    val slice = total.slice(index)&#10;&#10;    println(slice)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193446000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Distinct" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;Distinct&lt;/h1&gt;&#10;Ini adalah contoh kode menggunakan fungsi &lt;code&gt;Distinct&lt;/code&gt; yang dapat dimanfaatkan untuk menyaring item yang memiliki nilai yang sama pada sebuah Collection.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4540&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Advanced Collection Function (Lanjutan)&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878038" />
                            <option name="index" value="5" />
                            <option name="name" value="Distinct" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    val total = listOf(1, 2, 1, 3, 4, 5, 2, 3, 4, 5)&#10;    val distinct = total.distinct()&#10;&#10;    println(distinct)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193448000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="265463" />
                      <option name="index" value="12" />
                      <option name="name" value="Recursion" />
                      <option name="updateDate" value="1571195585000" />
                      <option name="unitId" value="246421" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Recursion Initilization" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;Recursion Initialization&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana inisialisasi &lt;b&gt;recursion&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4542&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Recursion&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878039" />
                            <option name="index" value="1" />
                            <option name="name" value="Recursion Initilization" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    println(&quot;Factorial 99999 is: ${factorial(99999)}&quot;)&#10;}&#10;&#10;&#10;fun factorial(n: Int): Int {&#10;    return if (n == 1) {&#10;        n&#10;    } else {&#10;        n * factorial(n - 1)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193453000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Tail Recursion" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&lt;h1&gt;Tail Recursion&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana inisialisasi &lt;b&gt;tail recursion&lt;/b&gt; dengan memanfaatkan &lt;code&gt;tailrec&lt;/code&gt; &lt;i&gt;modifier&lt;/i&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4542&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Recursion&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878040" />
                            <option name="index" value="2" />
                            <option name="name" value="Tail Recursion" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    println(&quot;Factorial 99999 is: ${factorial(99999)}&quot;)&#10;}&#10;&#10;&#10;tailrec fun factorial(n: Int, result: Int = 1): Int {&#10;    val newResult = n * result&#10;    return if (n == 1) {&#10;        newResult&#10;    } else {&#10;        factorial(n - 1, newResult)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193455000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="242458" />
                      <option name="index" value="13" />
                      <option name="name" value="Latihan" />
                      <option name="updateDate" value="1571195551000" />
                      <option name="unitId" value="214891" />
                      <option name="items">
                        <list>
                          <OutputTask>
                            <option name="customPresentableName" value="Latihan" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Latihan&lt;/h1&gt;&#10;Lengkapi potongan kode pada program sederhana di samping agar dapat berjalan dengan baik.&#10;&lt;br&gt;&#10;&lt;br&gt;&#10;&lt;b&gt;&lt;i&gt;TODO 1 :&lt;/i&gt;&lt;/b&gt;&lt;br&gt;Buatlah fungsi &lt;code&gt;getFirstAndLast&lt;/code&gt; yang menjadi ekstensi dari kelas &lt;b&gt;String&lt;/b&gt; dengan tipe kembalian &lt;code&gt;Map&amp;lt;String, Char&amp;gt;&lt;/code&gt;&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;b&gt;&lt;i&gt;TODO 2 :&lt;/i&gt;&lt;/b&gt;&lt;br&gt;Tambahkan fungsi untuk mencetak nilai dari variable &lt;code&gt;firstChar&lt;/code&gt; dan &lt;code&gt;lastChar&lt;/code&gt; pada konsol.&#10;&lt;br&gt;&lt;br&gt;&#10;Jika dijalankan konsol akan menampilkan teks seperti berikut:&#10;&lt;pre&gt;First letter is &lt;b&gt;K&lt;/b&gt; and &lt;b&gt;n&lt;/b&gt; for second letter&#10;&lt;/pre&gt;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878044" />
                            <option name="index" value="1" />
                            <option name="name" value="Latihan" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="fun main() {&#10;    val text = &quot;Kotlin&quot;.getFirstAndLast()&#10;&#10;    val firstChar = text[&quot;first&quot;]&#10;    val lastChar = text[&quot;last&quot;]&#10;&#10;    // TODO 2&#10;    println()&#10;&#10;}&#10;&#10;// TODO 1&#10;fun String.getFirstAndLast() = mapOf&lt;String, Char&gt;()" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="test/output.txt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/output.txt" />
                                      <option name="text" value="First letter is K and n for second letter&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193475000" />
                          </OutputTask>
                        </list>
                      </option>
                    </Lesson>
                  </list>
                </option>
              </Section>
              <Section>
                <option name="courseId" value="54217" />
                <option name="customPresentableName" />
                <option name="id" value="84612" />
                <option name="index" value="6" />
                <option name="name" value="Object-Oriented" />
                <option name="position" value="6" />
                <option name="updateDate" value="1571195581000" />
                <option name="items">
                  <list>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226716" />
                      <option name="index" value="1" />
                      <option name="name" value="Object Everywhere" />
                      <option name="updateDate" value="1565103624000" />
                      <option name="unitId" value="199264" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 1" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Object&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan beberapa fungsi dari sebuah objek.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4304&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Object Everywhere&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701524" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh 1" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val company = &quot;Dicoding&quot;&#10;    println(company.reversed())&#10;    println(company.toUpperCase())&#10;    println(company.toLowerCase())&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103621000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 2" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Object&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan beberapa fungsi konversi tipe data dari sebuah objek.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4304&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Object Everywhere&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="708885" />
                            <option name="index" value="2" />
                            <option name="name" value="Contoh 2" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val someString = &quot;123&quot;&#10;    val someInt = someString.toInt()&#10;    val someOtherString = &quot;12.34&quot;&#10;    val someDouble = someOtherString.toDouble()&#10;&#10;    println(someInt is Int)&#10;    println(someDouble is Double)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103624000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226717" />
                      <option name="index" value="2" />
                      <option name="name" value="Classes" />
                      <option name="updateDate" value="1565103627000" />
                      <option name="unitId" value="199265" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Classes&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisasi kelas dan cara penggunaannya.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4310&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Classes&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701525" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="class Animal(val name: String,&#10;             val weight: Double,&#10;             val age: Int,&#10;             val isMammal: Boolean) {&#10;&#10;    fun eat() {&#10;        println(&quot;$name makan!&quot;)&#10;    }&#10;&#10;    fun sleep() {&#10;        println(&quot;$name tidur!&quot;)&#10;    }&#10;}&#10;&#10;// main function&#10;fun main() {&#10;    val dicodingCat = Animal(&quot;Dicoding Miaw&quot;, 4.2, 2, true)&#10;    println(&quot;Nama: ${dicodingCat.name}, Berat: ${dicodingCat.weight}, Umur: ${dicodingCat.age}, mamalia: ${dicodingCat.isMammal}&quot;)&#10;    dicodingCat.eat()&#10;    dicodingCat.sleep()&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103627000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226718" />
                      <option name="index" value="3" />
                      <option name="name" value="Properties" />
                      <option name="updateDate" value="1565103630000" />
                      <option name="unitId" value="199266" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Property Accessor&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana sebuah properti menyediakan fungsi &lt;code&gt;getter setter&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4315&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Properties&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701526" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="class Animal{&#10;    var name: String = &quot;Dicoding Miaw&quot;&#10;        get(){&#10;            println(&quot;Fungsi Getter terpanggil&quot;)&#10;            return field&#10;        }&#10;        set(value){&#10;            println(&quot;Fungsi Setter terpanggil&quot;)&#10;            field = value&#10;        }&#10;}&#10;&#10;// main function&#10;fun main(){&#10;    val dicodingCat = Animal()&#10;    println(&quot;Nama: ${dicodingCat.name}&quot; )&#10;    dicodingCat.name = &quot;Goose&quot;&#10;    println(&quot;Nama: ${dicodingCat.name}&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103630000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226719" />
                      <option name="index" value="4" />
                      <option name="name" value="Constructor" />
                      <option name="updateDate" value="1565103643000" />
                      <option name="unitId" value="199267" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 1" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Primary Constructor&lt;/h1&gt;&#10;Ini adalah contoh kode deklarasi kelas dengan &lt;b&gt;primary constructor&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4316&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Constructor&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701527" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh 1" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="class Animal(val name: String, val weight: Double, val age: Int, val isMammal: Boolean)&#10;&#10;fun main() {&#10;    val dicodingCat = Animal(&quot;Dicoding Miaw&quot;, 4.2, 2, true)&#10;    println(&quot;Nama: ${dicodingCat.name}, Berat: ${dicodingCat.weight}, Umur: ${dicodingCat.age}, mamalia: ${dicodingCat.isMammal}&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103633000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 2" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;init block&lt;/h1&gt;&#10;Ini adalah contoh kode deklarasi kelas dengan &lt;b&gt;primary constructor&lt;/b&gt; yang memanfaatkan &lt;code&gt;init block&lt;/code&gt; untuk inisialisasi nilai.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4316&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Constructor&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="708994" />
                            <option name="index" value="2" />
                            <option name="name" value="Contoh 2" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="class Animal(pName: String, pWeight: Double, pAge: Int, pIsMammal: Boolean){&#10;    val name: String&#10;    val weight: Double&#10;    val age: Int&#10;    val isMammal: Boolean&#10;&#10;    init {&#10;        weight = if(pWeight &lt; 0) 0.1 else pWeight&#10;        age = if(pAge &lt; 0) 0 else pAge&#10;        name = pName&#10;        isMammal = pIsMammal&#10;    }&#10;}&#10;&#10;fun main() {&#10;    val dicodingCat = Animal(&quot;Dicoding Miaw&quot;, 4.2, 2, true)&#10;    println(&quot;Nama: ${dicodingCat.name}, Berat: ${dicodingCat.weight}, Umur: ${dicodingCat.age}, mamalia: ${dicodingCat.isMammal}&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103636000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 3" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Secondary Constructor&lt;/h1&gt;&#10;Ini adalah contoh kode untuk deklarasi kelas dengan &lt;b&gt;secondary constructor&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4317&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Constructor (Lanjutan)&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="708995" />
                            <option name="index" value="3" />
                            <option name="name" value="Contoh 3" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="class Animal(name: String, weight: Double, age: Int) {&#10;    val name: String&#10;    val weight: Double&#10;    val age: Int&#10;    var isMammal: Boolean&#10;&#10;    init {&#10;        this.weight = if (weight &lt; 0) 0.1 else weight&#10;        this.age = if (age &lt; 0) 0 else age&#10;        this.name = name&#10;        this.isMammal = false&#10;    }&#10;&#10;    constructor(name: String, weight: Double, age: Int, isMammal: Boolean) : this(name, weight, age) {&#10;        this.isMammal = isMammal&#10;    }&#10;}&#10;&#10;fun main() {&#10;    val dicodingCat = Animal(&quot;Dicoding Miaw&quot;, 2.5, 2, true)&#10;    println(&quot;Nama: ${dicodingCat.name}, Berat: ${dicodingCat.weight}, Umur: ${dicodingCat.age}, mamalia: ${dicodingCat.isMammal}&quot;)&#10;&#10;    val dicodingBird = Animal(&quot;Dicoding tweet&quot;, 0.5, 1)&#10;    println(&quot;Nama: ${dicodingBird.name}, Berat: ${dicodingBird.weight}, Umur: ${dicodingBird.age}, mamalia: ${dicodingBird.isMammal}&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103640000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 4" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Default Constructor&lt;/h1&gt;&#10;Ini adalah contoh kode deklarasi kelas dengan &lt;b&gt;default constructor&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4317&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Constructor (Lanjutan)&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="708996" />
                            <option name="index" value="4" />
                            <option name="name" value="Contoh 4" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="class Animal{&#10;    val name: String = &quot;Dicoding Miaw&quot;&#10;    val weight: Double = 4.2&#10;    val age: Int = 2&#10;    val isMammal: Boolean = true&#10;}&#10;&#10;fun main(){&#10;    val dicodingCat = Animal()&#10;    println(&quot;Nama: ${dicodingCat.name}, Berat: ${dicodingCat.weight}, Umur: ${dicodingCat.age}, mamalia: ${dicodingCat.isMammal}&quot; )&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103643000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226720" />
                      <option name="index" value="5" />
                      <option name="name" value="Inheritances" />
                      <option name="updateDate" value="1565103646000" />
                      <option name="unitId" value="199268" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Inheritances&lt;/h1&gt;&#10;Ini adalah contoh kode &lt;b&gt;inheritance&lt;/b&gt; sebuah kelas.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4321&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Inheritances&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701528" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="open class Animal(val name: String, val weight: Double, val age: Int, val isCarnivore: Boolean){&#10;&#10;    open fun eat(){&#10;        println(&quot;$name sedang makan!&quot;)&#10;    }&#10;&#10;    open fun sleep(){&#10;        println(&quot;$name sedang tidur!&quot;)&#10;    }&#10;}&#10;&#10;class Cat(pName: String, pWeight: Double, pAge: Int, pIsCarnivore: Boolean, val furColor: String, val numberOfFeet: Int)&#10;    : Animal(pName, pWeight, pAge, pIsCarnivore) {&#10;&#10;    fun playWithHuman() {&#10;        println(&quot;$name bermain bersama Manusia!&quot;)&#10;    }&#10;&#10;    override fun eat(){&#10;        println(&quot;$name sedang memakan ikan!&quot;)&#10;    }&#10;&#10;    override fun sleep() {&#10;        println(&quot;$name sedang tidur di bantal!&quot;)&#10;    }&#10;}&#10;&#10;fun main(){&#10;    val dicodingCat = Cat(&quot;Dicoding Miaw&quot;, 3.2, 2, true, &quot;Brown&quot;, 4)&#10;&#10;    dicodingCat.playWithHuman()&#10;    dicodingCat.eat()&#10;    dicodingCat.sleep()&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103646000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226721" />
                      <option name="index" value="6" />
                      <option name="name" value="Abstract Class" />
                      <option name="updateDate" value="1565103649000" />
                      <option name="unitId" value="199269" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Abstract Class&lt;/h1&gt;&#10;Ini adalah contoh kode deklarasi &lt;b&gt;abstract class&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4322&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Abstract Class&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="709010" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="abstract class Animal(var name: String, var weight: Double, var age: Int, var isCarnivore: Boolean){&#10;&#10;    fun eat(){&#10;        println(&quot;$name sedang makan!&quot;)&#10;    }&#10;&#10;    fun sleep(){&#10;        println(&quot;$name sedang tidur!&quot;)&#10;    }&#10;}&#10;&#10;fun main() {&#10;    println(&quot;Abstract Class&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103649000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226722" />
                      <option name="index" value="7" />
                      <option name="name" value="Visibility Modifiers" />
                      <option name="updateDate" value="1565103662000" />
                      <option name="unitId" value="199270" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="public" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;public&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana sebuah properti dapat diakses secara langsung.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4326&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Visibility Modifier&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701530" />
                            <option name="index" value="1" />
                            <option name="name" value="public" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="class Animal(val name: String, val weight: Double, val age: Int, val isMammal: Boolean = true)&#10;&#10;fun main() {&#10;    val dicodingCat = Animal(&quot;Dicoding Miaw&quot;, 2.2, 2)&#10;    dicodingCat.name&#10;    dicodingCat.weight&#10;    dicodingCat.age&#10;    dicodingCat.isMammal&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103653000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="private" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;private&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana properti tidak dapat diakses secara langsung ketika menggunakan &lt;code&gt;private&lt;/code&gt; dan membutuhkan sebuah &lt;code&gt;getter setter&lt;/code&gt; agar dapat mengaksesnya.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4326&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Visibility Modifier&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="709040" />
                            <option name="index" value="2" />
                            <option name="name" value="private" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="class Animal(private var name: String, private val weight: Double, private val age: Int, private val isMammal: Boolean = true) {&#10;&#10;    fun getName() = name&#10;&#10;    fun setName(newName: String) {&#10;        name = newName&#10;    }&#10;}&#10;&#10;fun main() {&#10;    val dicodingCat = Animal(&quot;Dicoding Miaw&quot;, 2.5, 2)&#10;&#10;    // dicoding.name &lt;- Cannot access '[PROPERTY]': it is private in 'Animal'&#10;    println(dicodingCat.getName())&#10;    dicodingCat.setName(&quot;Gooose&quot;)&#10;    println(dicodingCat.getName())&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103656000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="protected" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;protected&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana sebuah modifier &lt;code&gt;protected&lt;/code&gt; membatasi akses member dari sebuah kelas.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4334&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Visibility Modifier (Lanjutan)&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="709041" />
                            <option name="index" value="3" />
                            <option name="name" value="protected" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="open class Animal(val name: String, protected val weight: Double)&#10;&#10;class Cat(pName: String, pWeight: Double) : Animal(pName, pWeight)&#10;&#10;&#10;fun main() {&#10;    val cat = Cat(&quot;Dicoding Miaw&quot;, 2.0)&#10;    println(&quot;Nama Kucing: ${cat.name}&quot;)&#10;    // println(&quot;Berat Kucing: ${cat.weight}&quot;) &lt;- Cannot access 'weight': it is protected in 'Cat'&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103659000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="internal" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;internal&lt;/h1&gt;&#10;Ini adalah contoh kode deklarasi sebuah kelas dideklarasi dengan modifier &lt;code&gt;internal&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4334&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Visibility Modifier (Lanjutan)&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="709042" />
                            <option name="index" value="4" />
                            <option name="name" value="internal" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="internal class Animal(val name: String)&#10;&#10;fun main() {&#10;    println(&quot;internal visibility modifier&quot;)&#10;}&#10;&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103662000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226723" />
                      <option name="index" value="8" />
                      <option name="name" value="Import dan Packages" />
                      <option name="updateDate" value="1565103672000" />
                      <option name="unitId" value="199271" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 1" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;import&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan fungsi yang berbeda package dengan menggunakan &lt;code&gt;import&lt;/code&gt; dalam mengaksesnya.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4335&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Import dan Packages&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701531" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh 1" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlin.math.PI&#10;import kotlin.math.cos&#10;import kotlin.math.sqrt&#10;&#10;// main function&#10;fun main(){&#10;    println(PI)&#10;    println(cos(120.0))&#10;    println(sqrt(9.0))&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103666000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 2" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;package&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana sebuah kelas dibuat dengan package terpisah.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4336&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Membuat Package Baru&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="709448" />
                            <option name="index" value="2" />
                            <option name="name" value="Contoh 2" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="test/Tests.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.kt" />
                                      <option name="text" value="import org.junit.Assert&#10;import org.junit.Test&#10;&#10;class Test {&#10;    @Test fun testSolution() {&#10;        //TODO: implement your test here&#10;        Assert.assertTrue(&quot;Tests not implemented for the task&quot;, false)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/com/dicoding/oop/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/com/dicoding/oop/App.kt" />
                                      <option name="text" value="package com.dicoding.oop&#10;&#10;import com.dicoding.oop.utils.PI&#10;import com.dicoding.oop.utils.factorial&#10;import com.dicoding.oop.utils.pow&#10;import com.dicoding.oop.utils.sayHello&#10;&#10;fun main() {&#10;    sayHello()&#10;    println(factorial(4.0))&#10;    println(pow(3.0, 2.0))&#10;    println(PI)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/com/dicoding/oop/utils/MyMath.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/com/dicoding/oop/utils/MyMath.kt" />
                                      <option name="text" value="package com.dicoding.oop.utils&#10;&#10;fun sayHello() = println(&quot;Hello From package utils&quot;)&#10;&#10;const val PI = 3.1415926535  // package level variable&#10;&#10;fun pow(number: Double, power: Double) : Double {&#10;    var result = 1.0&#10;    var counter = power&#10;    while (counter &gt; 0) {&#10;        result *= number&#10;        counter--&#10;    }&#10;    return result&#10;}&#10;&#10;fun factorial(number: Double) : Double {&#10;    var result = 1.0&#10;    var counter = 1.0&#10;    while (counter &lt;= number) {&#10;        result *= counter&#10;        counter++&#10;    }&#10;&#10;    return result&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103669000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 3" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;package&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana melakukan import dengan memanfaatkan tanda bintang &lt;b&gt;(*)&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4336&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Membuat Package Baru&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="709449" />
                            <option name="index" value="3" />
                            <option name="name" value="Contoh 3" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/com/dicoding/oop/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/com/dicoding/oop/App.kt" />
                                      <option name="text" value="package com.dicoding.oop&#10;&#10;import com.dicoding.oop.utils.*&#10;&#10;fun main() {&#10;    sayHello()&#10;    println(factorial(4.0))&#10;    println(pow(3.0, 2.0))&#10;    println(PI)&#10;    println(areaOfCircle(13.0))&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="src/com/dicoding/oop/utils/MyMath.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/com/dicoding/oop/utils/MyMath.kt" />
                                      <option name="text" value="package com.dicoding.oop.utils&#10;&#10;fun sayHello() = println(&quot;Hello From package utils&quot;)&#10;&#10;const val PI = 3.1415926535  // package level variable&#10;&#10;fun pow(number: Double, power: Double) : Double {&#10;    var result = 1.0&#10;    var counter = power&#10;    while (counter &gt; 0) {&#10;        result *= number&#10;        counter--&#10;    }&#10;    return result&#10;}&#10;&#10;fun factorial(number: Double) : Double {&#10;    var result = 1.0&#10;    var counter = 1.0&#10;    while (counter &lt;= number) {&#10;        result *= counter&#10;        counter++&#10;    }&#10;&#10;    return result&#10;}&#10;&#10;fun areaOfCircle(radius: Double) : Double {&#10;    return PI * 2 * radius&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103672000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226724" />
                      <option name="index" value="9" />
                      <option name="name" value="Exception Handling" />
                      <option name="updateDate" value="1565103681000" />
                      <option name="unitId" value="199272" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 1" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;try-catch&lt;/h1&gt;&#10;Ini adalah contoh kode penanganan exception dengan &lt;b&gt;try-catch&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4341&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Menerapkan Exception Handling&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701532" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh 1" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val someNullValue: String? = null&#10;    lateinit var someMustNotNullValue: String&#10;&#10;    try {&#10;        someMustNotNullValue = someNullValue!!&#10;        println(someMustNotNullValue)&#10;    } catch (e: Exception) {&#10;        someMustNotNullValue = &quot;Nilai String Null&quot;&#10;        println(someMustNotNullValue)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103675000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 2" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;try-catch-finally&lt;/h1&gt;&#10;Ini adalah contoh kode penanganan exception dengan &lt;b&gt;try-catch-finally&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4341&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Menerapkan Exception Handling&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="709450" />
                            <option name="index" value="2" />
                            <option name="name" value="Contoh 2" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val someNullValue: String? = null&#10;    lateinit var someMustNotNullValue: String&#10;&#10;    try {&#10;        someMustNotNullValue = someNullValue!!&#10;    } catch (e: Exception) {&#10;        someMustNotNullValue = &quot;Nilai String Null&quot;&#10;    } finally {&#10;        println(someMustNotNullValue)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103678000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 3" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Multiple Catch&lt;/h1&gt;&#10;Ini adalah contoh kode penanganan exception dengan &lt;b&gt;multiple catch&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4341&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Menerapkan Exception Handling&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="709451" />
                            <option name="index" value="3" />
                            <option name="name" value="Contoh 3" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlin.NumberFormatException&#10;&#10;// main function&#10;fun main() {&#10;    val someStringValue: String? = null&#10;    var someIntValue = 0&#10;&#10;    try {&#10;        someIntValue = someStringValue!!.toInt()&#10;    } catch (e: NullPointerException) {&#10;        someIntValue = 0&#10;    } catch (e: NumberFormatException) {&#10;        someIntValue = -1&#10;    } finally {&#10;        when (someIntValue) {&#10;            0 -&gt; println(&quot;Catch block NullPointerException terpanggil!&quot;)&#10;            -1 -&gt; println(&quot;Catch block NumberFormatException terpanggil!&quot;)&#10;            else -&gt; println(someIntValue)&#10;        }&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103681000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226725" />
                      <option name="index" value="10" />
                      <option name="name" value="Overloading" />
                      <option name="updateDate" value="1565103685000" />
                      <option name="unitId" value="199273" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Overloading&lt;/h1&gt;&#10;Ini adalah contoh kode deklarasi beberapa fungsi yang memiliki nama yang sama.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4342&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Overloading&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701533" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="class Calculator {&#10;    fun add(value1: Int, value2: Int) = value1 + value2&#10;    fun add(value1: Int, value2: Int, value3: Int) = value1 + value2 + value3&#10;    fun add(value1: Double, value2: Double) = value1 + value2&#10;    fun add(value1: Float, value2: Float) = value1 + value2&#10;&#10;    fun min(value1: Int, value2: Int) = if (value1 &lt; value2) value1 else value2&#10;    fun min(value1: Double, value2: Double) = if (value1 &lt; value2) value1 else value2&#10;}&#10;&#10;fun main() {&#10;    val calc = Calculator()&#10;&#10;    println(calc.add(2, 4))&#10;    println(calc.add(2.5, 2.2))&#10;    println(calc.add(6f, 7f))&#10;    println(calc.add(1, 2, 3))&#10;&#10;    println(calc.min(9, 2))&#10;    println(calc.min(17.2, 18.3))&#10;}&#10;&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103685000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226726" />
                      <option name="index" value="11" />
                      <option name="name" value="Extension Properties" />
                      <option name="updateDate" value="1565103689000" />
                      <option name="unitId" value="199274" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Extension Property&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisasi &lt;b&gt;extension property&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4344&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Extension Properties&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701534" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="class Animal(var name: String, var weight: Double, var age: Int, var isMammal: Boolean)&#10;&#10;val Animal.getAnimalInfo : String&#10;    get() =  &quot;Nama: ${this.name}, Berat: ${this.weight}, Umur: ${this.age} Mamalia: ${this.isMammal}&quot;&#10;&#10;fun main() {&#10;    val dicodingCat = Animal(&quot;Dicoding Miaw&quot;, 5.0, 2, true)&#10;    println(dicodingCat.getAnimalInfo)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103689000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226727" />
                      <option name="index" value="12" />
                      <option name="name" value="Interfaces" />
                      <option name="updateDate" value="1565103692000" />
                      <option name="unitId" value="199275" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;interfaces&lt;/h1&gt;&#10;Ini adalah contoh kode deklarasi dan implementasi &lt;code&gt;interface&lt;/code&gt; pada sebuah kelas.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4346&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Interfaces&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701535" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="interface IFly {&#10;    fun fly()&#10;    val numberOfWings: Int&#10;}&#10;&#10;class Bird(override val numberOfWings: Int) : IFly {&#10;    override fun fly() {&#10;        if(numberOfWings &gt; 0) println(&quot;Flying with $numberOfWings wings&quot;)&#10;        else println(&quot;I'm Flying without wings&quot;)&#10;    }&#10;}&#10;&#10;&#10;fun main() {&#10;    val bird = Bird(2)&#10;    bird.fly()&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103692000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226728" />
                      <option name="index" value="13" />
                      <option name="name" value="Property Delegation" />
                      <option name="updateDate" value="1565103695000" />
                      <option name="unitId" value="199276" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Delegate&lt;/h1&gt;&#10;Ini adalah contoh kode pendelegasian sebuah properti kelas.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4348&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Property Delegation&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701536" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlin.reflect.KProperty&#10;&#10;&#10;class DelegateName {&#10;    private var value: String = &quot;Default&quot;&#10;&#10;    operator fun getValue(classRef: Any?, property: KProperty&lt;*&gt;) : String {&#10;        println(&quot;Fungsi ini sama seperti getter untuk properti ${property.name} pada class $classRef&quot;)&#10;        return value&#10;    }&#10;&#10;    operator fun setValue(classRef: Any?, property: KProperty&lt;*&gt;, newValue: String){&#10;        println(&quot;Nilai ${property.name} dari: $value akan berubah menjadi $newValue&quot;)&#10;        value = newValue&#10;    }&#10;}&#10;&#10;class Animal {&#10;    var name: String by DelegateName()&#10;}&#10;&#10;class Person {&#10;    var name: String by DelegateName()&#10;}&#10;&#10;class Hero {&#10;    var name: String by DelegateName()&#10;}&#10;&#10;fun main() {&#10;    val animal = Animal()&#10;    animal.name = &quot;Dicoding Miaw&quot;&#10;    println(&quot;Nama Hewan: ${animal.name}&quot;)&#10;&#10;    val person = Person()&#10;    person.name = &quot;Dimas&quot;&#10;    println(&quot;Nama Orang: ${person.name}&quot;)&#10;&#10;    val hero = Hero()&#10;    hero.name = &quot;Gatotkaca&quot;&#10;    println(&quot;Nama Pahlawan: ${hero.name}&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103695000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="265464" />
                      <option name="index" value="14" />
                      <option name="name" value="Latihan" />
                      <option name="updateDate" value="1571195581000" />
                      <option name="unitId" value="246422" />
                      <option name="items">
                        <list>
                          <OutputTask>
                            <option name="customPresentableName" value="Latihan" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Latihan&lt;/h1&gt;&#10;Lengkapi potongan kode pada program sederhana di samping agar dapat berjalan dengan baik.&#10;&lt;br&gt;&#10;&lt;br&gt;&#10;&lt;b&gt;&lt;i&gt;TODO 1 :&lt;/i&gt;&lt;/b&gt;&lt;br&gt;Lengkapi kode pada kelas &lt;code&gt;Cat&lt;/code&gt; dengan ketentuan seperti berikut:&#10;&lt;ul&gt;&#10;  &lt;li&gt;&#10;    Buatlah fungsi &lt;code&gt;getter setter&lt;/code&gt; untuk properti &lt;code&gt;sleep&lt;/code&gt; yang di dalamnya terdapat fungsi untuk mencetak teks:&#10;    &lt;pre&gt;Fungsi getter/setter dipanggil&lt;/pre&gt;&#10;  &lt;/li&gt;&#10;  &lt;li&gt;&#10;    Tambahkan kode pada fungsi &lt;code&gt;toSleep()&lt;/code&gt; untuk mencetak teks:&#10;&#10;    &lt;pre&gt;[name], sleep!&lt;/pre&gt;&#10;&#10;    jika &lt;code&gt;sleep&lt;/code&gt; bernilai &lt;code&gt;true&lt;/code&gt; dan teks:&#10;&#10;    &lt;pre&gt;name, let's play!&lt;/pre&gt;&#10;&#10;    jika &lt;code&gt;sleep&lt;/code&gt; bernilai &lt;code&gt;false&lt;/code&gt;.&#10;&#10;  &lt;/li&gt;&#10;&lt;/ul&gt;&#10;&lt;br&gt;&#10;&lt;b&gt;&lt;i&gt;TODO 2 :&lt;/i&gt;&lt;/b&gt;&lt;br&gt;Lengkapi inisialisasi dengan kelas &lt;code&gt;Cat&lt;/code&gt;.&#10;&lt;br&gt;&lt;br&gt;&#10;Jika dijalankan konsol akan menampilkan teks seperti berikut:&#10;&lt;pre&gt;Fungsi getter dipanggil&#10;Gippy, let's play!&#10;Fungsi setter dipanggil&#10;Fungsi getter dipanggil&#10;Gippy, sleep!&lt;/pre&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878041" />
                            <option name="index" value="1" />
                            <option name="name" value="Latihan" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="// TODO 1&#10;class Cat(private val name: String) {&#10;    var sleep: Boolean = false&#10;&#10;    fun toSleep() {&#10;        println()&#10;    }&#10;}&#10;&#10;fun main() {&#10;&#10;    // TODO 2&#10;    val gippy = Cat(&quot;&quot;)&#10;&#10;    gippy.toSleep()&#10;    gippy.sleep = true&#10;    gippy.toSleep()&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="test/output.txt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/output.txt" />
                                      <option name="text" value="Fungsi getter dipanggil&#10;Gippy, let's play!&#10;Fungsi setter dipanggil&#10;Fungsi getter dipanggil&#10;Gippy, sleep!" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193462000" />
                          </OutputTask>
                        </list>
                      </option>
                    </Lesson>
                  </list>
                </option>
              </Section>
              <Section>
                <option name="courseId" value="54217" />
                <option name="customPresentableName" />
                <option name="id" value="84613" />
                <option name="index" value="7" />
                <option name="name" value="Generics" />
                <option name="position" value="7" />
                <option name="updateDate" value="1571195585000" />
                <option name="items">
                  <list>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226729" />
                      <option name="index" value="1" />
                      <option name="name" value="Generics" />
                      <option name="updateDate" value="1565103715000" />
                      <option name="unitId" value="199277" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 1" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Generics&lt;/h1&gt;&#10;Ini adalah contoh kode inisialisasi kelas &lt;b&gt;generics&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4257&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Generics&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701537" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh 1" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val longArrayList = ArrayList&lt;Long&gt;()&#10;    val firstLong = longArrayList[0]&#10;}&#10;&#10;class ArrayList&lt;T&gt; : List&lt;T&gt; {&#10;    override fun get(index: Int): T {&#10;        return this[index]&#10;    }&#10;}&#10;&#10;interface List&lt;T&gt; {&#10;    operator fun get(index: Int): T&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103708000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 2" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Generics&lt;/h1&gt;&#10;Ini adalah contoh kode implemantasi &lt;b&gt;generics&lt;/b&gt; pada fungsi &lt;code&gt;slice&lt;/code&gt; yang menjadi ekstensi dari kelas &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; .&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4258?&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Generics&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="707841" />
                            <option name="index" value="2" />
                            <option name="name" value="Contoh 2" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val numbers = (1..100).toList()&#10;    print(numbers.slice(1..10))&#10;}&#10;&#10;/*&#10;public fun &lt;T&gt; List&lt;T&gt;.slice(indices: IntRange): List&lt;T&gt; {&#10;    if (indices.isEmpty()) return listOf()&#10;    return this.subList(indices.start, indices.endInclusive + 1).toList()&#10;}&#10;*/" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103712000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 3" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Generics&lt;/h1&gt;&#10;Ini adalah contoh kode inisialiasasi dan penggunaan fungsi &lt;b&gt;generics&lt;/b&gt; dengan &lt;b&gt;constraint type parameter&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4261&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Constraint&#10;    Type Parameter&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="707842" />
                            <option name="index" value="3" />
                            <option name="name" value="Contoh 3" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;fun main() {&#10;    val numbers = ListNumber&lt;Long&gt;()&#10;    val numbers2 = ListNumber&lt;Int&gt;()&#10;    //  val numbers3 = ListNumber&lt;String&gt;() error : Type argument is not within its bounds&#10;}&#10;&#10;class ListNumber&lt;T : Number&gt; : List&lt;T&gt;{&#10;    override fun get(index: Int): T {&#10;        return this[index]&#10;    }&#10;}&#10;interface List&lt;T&gt; {&#10;    operator fun get(index: Int): T&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103715000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226730" />
                      <option name="index" value="2" />
                      <option name="name" value="Variance" />
                      <option name="updateDate" value="1565103719000" />
                      <option name="unitId" value="199278" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Variance&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana &lt;b&gt;variance&lt;/b&gt; bekerja terhadap dua variable yang memiliki subtipe yang sama.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4263&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Variance&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701538" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="// main function&#10;abstract class Vehicle(wheel: Int)&#10;&#10;class Car(speed: Int) : Vehicle(4)&#10;&#10;class MotorCycle(speed: Int) : Vehicle(2)&#10;&#10;fun main() {&#10;    val car = Car(200)&#10;    val motorCycle = MotorCycle(100)&#10;    var vehicle: Vehicle = car&#10;    vehicle = motorCycle&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103719000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="242570" />
                      <option name="index" value="3" />
                      <option name="name" value="Latihan" />
                      <option name="updateDate" value="1571195585000" />
                      <option name="unitId" value="214990" />
                      <option name="items">
                        <list>
                          <EduTask>
                            <option name="customPresentableName" value="Latihan" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Latihan&lt;/h1&gt;&#10;Lengkapi potongan kode pada program sederhana di samping agar dapat berjalan dengan baik.&#10;&lt;br&gt;&#10;&lt;br&gt;&#10;&lt;b&gt;&lt;i&gt;TODO 1 :&lt;/i&gt;&lt;/b&gt;&lt;br&gt;Buatlah fungsi &lt;b&gt;generics&lt;/b&gt; baru dengan ketentuan sebagai berikut:&#10;&lt;ul&gt;&#10;  &lt;li&gt;&#10;    Nama fungsi adalah &lt;code&gt;getResult&lt;/code&gt;.&#10;  &lt;/li&gt;&#10;  &lt;li&gt;&#10;    Memiliki satu tipe parameter.&#10;  &lt;/li&gt;&#10;  &lt;li&gt;&#10;    Jika argumen yang dilampirkan bertipe &lt;code&gt;Int&lt;/code&gt;, maka nilai yang dikembalikan adalah nilai argumen yang dikalikan &lt;b&gt;5&lt;/b&gt;.&#10;  &lt;/li&gt;&#10;  &lt;li&gt;&#10;    Jika argumen yang dilampirkan bertipe &lt;code&gt;String&lt;/code&gt;, maka nilai yang dikembalikan adalah panjang karakter.&#10;  &lt;/li&gt;&#10;  &lt;li&gt;&#10;    Jika argumen yang dilampirkan bertipe selain &lt;code&gt;Int&lt;/code&gt; dan &lt;code&gt;String&lt;/code&gt;, maka nilai yang dikembalikan adalah &lt;b&gt;0&lt;/b&gt;.&#10;  &lt;/li&gt;&#10;&lt;/ul&gt;&#10;&lt;br&gt;&#10;&lt;b&gt;&lt;i&gt;TODO 2 :&lt;/i&gt;&lt;/b&gt;&lt;br&gt;Tambahkan fungsi untuk mencetak nilai dari variable &lt;code&gt;stringResult&lt;/code&gt; dan &lt;code&gt;intResult&lt;/code&gt; pada konsol.&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878045" />
                            <option name="index" value="1" />
                            <option name="name" value="Latihan" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="// Coming Soon&#10;fun main() {&#10;    val stringResult = getResult(&quot;Kotlin&quot;)&#10;    val intResult = getResult(100)&#10;&#10;    // TODO 2&#10;    println()&#10;}&#10;&#10;// TODO 1&#10;fun &lt;T&gt; getResult(args: T): Int {&#10;    return 0&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="test/Tests.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/Tests.kt" />
                                      <option name="text" value="import org.junit.Assert&#10;import org.junit.Test&#10;&#10;class Test {&#10;&#10;    private fun &lt;T&gt; checkFunction(args: T) {&#10;        val result = when (args) {&#10;            is String -&gt; args.length&#10;            is Int -&gt; args * 5&#10;            else -&gt; 0&#10;        }&#10;&#10;        Assert.assertEquals(&quot;Fungsi getResult seharusnya mengembalikan nilai $result&quot;, result, getResult(args))&#10;    }&#10;&#10;    @Test&#10;    fun test1() = checkFunction(&quot;Kotlin&quot;)&#10;&#10;    @Test&#10;    fun test2() = checkFunction(true)&#10;&#10;    @Test&#10;    fun test3() = checkFunction(10)&#10;&#10;    @Test&#10;    fun test4() = checkFunction(0x01)&#10;&#10;    @Test&#10;    fun test5() = checkFunction(false)&#10;&#10;    @Test&#10;    fun test6() = checkFunction(10L)&#10;&#10;    @Test&#10;    fun test7() = checkFunction('A')&#10;&#10;    @Test&#10;    fun test8() = checkFunction(100110)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193477000" />
                          </EduTask>
                        </list>
                      </option>
                    </Lesson>
                  </list>
                </option>
              </Section>
              <Section>
                <option name="courseId" value="54217" />
                <option name="customPresentableName" />
                <option name="id" value="84641" />
                <option name="index" value="8" />
                <option name="name" value="Coroutines" />
                <option name="position" value="8" />
                <option name="updateDate" value="1571195585000" />
                <option name="items">
                  <list>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="226784" />
                      <option name="index" value="1" />
                      <option name="name" value="Memulai Coroutine" />
                      <option name="updateDate" value="1565103732000" />
                      <option name="unitId" value="199322" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 1" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Memulai Coroutine&lt;/h1&gt;&#10;Ini adalah contoh kode yang menggambarkan bagaimana &lt;b&gt;coroutine&lt;/b&gt; bekerja.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4284&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Memulai Coroutine&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="701815" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh 1" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlinx.coroutines.delay&#10;import kotlinx.coroutines.launch&#10;import kotlinx.coroutines.runBlocking&#10;&#10;fun main() = runBlocking{&#10;    launch {&#10;        delay(1000L)&#10;        println(&quot;Coroutines!&quot;)&#10;    }&#10;    println(&quot;Hello,&quot;)&#10;    delay(2000L)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103726000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 2" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Coroutines Builder&lt;/h1&gt;&#10;Ini adalah contoh kode pemanggilan langsung sebuah &lt;b&gt;suspend function&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4285&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Coroutines Builder&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="711951" />
                            <option name="index" value="2" />
                            <option name="name" value="Contoh 2" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlinx.coroutines.*&#10;&#10;suspend fun getCapital(): Int {&#10;    delay(1000L)&#10;    return 50000&#10;}&#10;&#10;suspend fun getIncome(): Int {&#10;    delay(1000L)&#10;    return 75000&#10;}&#10;&#10;fun main() = runBlocking {&#10;    val capital = getCapital()&#10;    val income = getIncome()&#10;    println(&quot;Your profit is ${income - capital}&quot;)&#10;}&#10;" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103729000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 3" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Coroutines Builder&lt;/h1&gt;&#10;Ini adalah contoh kode pemanggilan sebuah &lt;b&gt;suspend function&lt;/b&gt; dari dalam &lt;code&gt;async&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4285&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Coroutines Builder&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="711952" />
                            <option name="index" value="3" />
                            <option name="name" value="Contoh 3" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlinx.coroutines.*&#10;import kotlin.system.measureTimeMillis&#10;&#10;suspend fun getCapital(): Int {&#10;    delay(1000L)&#10;    return 50000&#10;}&#10;&#10;suspend fun getIncome(): Int {&#10;    delay(1000L)&#10;    return 75000&#10;}&#10;&#10;fun main() = runBlocking {&#10;    val timeOne = measureTimeMillis {&#10;        val capital = getCapital()&#10;        val income = getIncome()&#10;        println(&quot;Your profit is ${income - capital}&quot;)&#10;    }&#10;&#10;    val timeTwo = measureTimeMillis {&#10;        val capital = async { getCapital() }&#10;        val income = async { getIncome() }&#10;        println(&quot;Your profit is ${income.await() - capital.await()}&quot;)&#10;    }&#10;&#10;    println(&quot;Completed in $timeOne ms vs $timeTwo ms&quot;)&#10;&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103732000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="229115" />
                      <option name="index" value="2" />
                      <option name="name" value="Job dan Deferred" />
                      <option name="updateDate" value="1565103749000" />
                      <option name="unitId" value="201648" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 1" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Membuat Job Baru&lt;/h1&gt;&#10;Ini adalah contoh kode menginisialisasikan sebuah &lt;b&gt;Job&lt;/b&gt; menggunakan &lt;code&gt;launch()&lt;/code&gt; dan &lt;code&gt;Job()&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4291&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Membuat dan Menjalankan Job Baru&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="711969" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh 1" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlinx.coroutines.*&#10;&#10;fun main() = runBlocking {&#10;&#10;    // menggunakan launch()&#10;    val jobLaunch = launch {&#10;        // do background task here }&#10;    }&#10;&#10;    // menggunakan job()&#10;    val job = Job()&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103736000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 2" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Menjalankan Job&lt;/h1&gt;&#10;Ini adalah contoh kode menjalankan &lt;b&gt;Job&lt;/b&gt; menggunakan fungsi &lt;code&gt;start()&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4291&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Membuat dan Menjalankan Job Baru&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="711970" />
                            <option name="index" value="2" />
                            <option name="name" value="Contoh 2" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlinx.coroutines.*&#10;&#10;fun main() = runBlocking {&#10;    val job = launch(start = CoroutineStart.LAZY) {&#10;        delay(1000L)&#10;        println(&quot;Start new job!&quot;)&#10;    }&#10;&#10;    job.start()&#10;    println(&quot;Other task&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103739000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 3" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Menjalankan Job&lt;/h1&gt;&#10;Ini adalah contoh kode menjalankan &lt;b&gt;Job&lt;/b&gt; menggunakan fungsi &lt;code&gt;join()&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4291&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Membuat dan Menjalankan Job Baru&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="711971" />
                            <option name="index" value="3" />
                            <option name="name" value="Contoh 3" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlinx.coroutines.*&#10;&#10;fun main() = runBlocking {&#10;    val job = launch(start = CoroutineStart.LAZY) {&#10;        delay(1000L)&#10;        println(&quot;Start new job!&quot;)&#10;    }&#10;&#10;    job.join()&#10;    println(&quot;Other task&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103743000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 4" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Membatalkan Job&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana membatalkan &lt;b&gt;Job&lt;/b&gt; yang sedang aktif.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4294&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Membatalkan Job&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="711972" />
                            <option name="index" value="4" />
                            <option name="name" value="Contoh 4" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlinx.coroutines.*&#10;&#10;fun main() = runBlocking {&#10;    val job = launch {&#10;        delay(5000)&#10;        println(&quot;Start new job!&quot;)&#10;    }&#10;&#10;    delay(2000)&#10;    job.cancel()&#10;    println(&quot;Cancelling job...&quot;)&#10;    if (job.isCancelled){&#10;        println(&quot;Job is cancelled&quot;)&#10;    }&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103746000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh 5" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Deferred&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan fungsi &lt;code&gt;await&lt;/code&gt; untuk mengakses nilai dari sebuah &lt;b&gt;Deferred&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4297&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Deferred&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="711973" />
                            <option name="index" value="5" />
                            <option name="name" value="Contoh 5" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlinx.coroutines.*&#10;&#10;suspend fun getCapital(): Int {&#10;    delay(1000L)&#10;    return 50000&#10;}&#10;&#10;suspend fun getIncome(): Int {&#10;    delay(1000L)&#10;    return 75000&#10;}&#10;&#10;fun main() = runBlocking {&#10;    val capital = async { getCapital() }&#10;    val income = async { getIncome() }&#10;    println(&quot;Your profit is ${income.await() - capital.await()}&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103749000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="229119" />
                      <option name="index" value="3" />
                      <option name="name" value="Coroutine Dispatcher" />
                      <option name="updateDate" value="1569587850000" />
                      <option name="unitId" value="201652" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Dispatcher.Default" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Dispatcher.Default&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan &lt;code&gt;Dispatcher.Default&lt;/code&gt; untuk menjalankan sebuah &lt;b&gt;coroutine&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4299&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Coroutine Dispatcher&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="712015" />
                            <option name="index" value="1" />
                            <option name="name" value="Dispatcher.Default" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlinx.coroutines.Dispatchers&#10;import kotlinx.coroutines.launch&#10;import kotlinx.coroutines.runBlocking&#10;&#10;fun main() = runBlocking {&#10;    launch {&#10;        // TODO: Implement suspending lambda here&#10;    }&#10;&#10;    launch(Dispatchers.Default) {&#10;        // TODO: Implement suspending lambda here&#10;    }&#10;&#10;    println(&quot;Dispatcher Default&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103752000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Dispatcher.IO" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Dispatcher.IO&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan &lt;code&gt;Dispatcher.IO&lt;/code&gt; untuk menjalankan sebuah &lt;b&gt;coroutine&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4299&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Coroutine Dispatcher&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="712016" />
                            <option name="index" value="2" />
                            <option name="name" value="Dispatcher.IO" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlinx.coroutines.Dispatchers&#10;import kotlinx.coroutines.launch&#10;import kotlinx.coroutines.runBlocking&#10;&#10;fun main() = runBlocking {&#10;&#10;    launch(Dispatchers.IO) {&#10;        // TODO: Implement algorithm here&#10;    }&#10;&#10;    println(&quot;Dispatcher IO&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1569587850000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Dispatcher.Unconfined" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Dispatcher.Unconfined&lt;/h1&gt;&#10;Ini adalah contoh kode penggunaan &lt;code&gt;Dispatcher.Unconfined&lt;/code&gt; untuk menjalankan sebuah &lt;b&gt;coroutine&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4299&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Coroutine Dispatcher&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="712018" />
                            <option name="index" value="3" />
                            <option name="name" value="Dispatcher.Unconfined" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlinx.coroutines.*&#10;&#10;@ExperimentalCoroutinesApi&#10;fun main() = runBlocking&lt;Unit&gt; {&#10;    launch(Dispatchers.Unconfined) {&#10;        println(&quot;Starting in ${Thread.currentThread().name}&quot;)&#10;        delay(1000)&#10;        println(&quot;Resuming in ${Thread.currentThread().name}&quot;)&#10;    }.start()&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103758000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Single Thread Context" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Single Thread Context&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana &lt;b&gt;Dispatcher&lt;/b&gt; menjamin jika setiap coroutine akan berjalan pada thread yang ditentukan menggunakan fungsi &lt;code&gt;newSingleThreadContext()&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4299&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Coroutine Dispatcher&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="712019" />
                            <option name="index" value="4" />
                            <option name="name" value="Single Thread Context" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlinx.coroutines.*&#10;&#10;fun main() = runBlocking&lt;Unit&gt; {&#10;    val dispatcher = newSingleThreadContext(&quot;myThread&quot;)&#10;    launch(dispatcher) {&#10;        println(&quot;Starting in ${Thread.currentThread().name}&quot;)&#10;        delay(1000)&#10;        println(&quot;Resuming in ${Thread.currentThread().name}&quot;)&#10;    }.start()&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103762000" />
                          </TheoryTask>
                          <TheoryTask>
                            <option name="customPresentableName" value="Thread Pool" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Thread Pool&lt;/h1&gt;&#10;Ini adalah contoh kode bagaimana &lt;b&gt;Dispatcher&lt;/b&gt; menjalankan coroutine pada thread yang tersedia menggunakan fungsi &lt;code&gt;newFixedThreadPoolContext()&lt;/code&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4299&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Coroutine Dispatcher&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="712020" />
                            <option name="index" value="5" />
                            <option name="name" value="Thread Pool" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlinx.coroutines.*&#10;&#10;@ObsoleteCoroutinesApi&#10;fun main() = runBlocking&lt;Unit&gt; {&#10;    val dispatcher = newFixedThreadPoolContext(3, &quot;myPool&quot;)&#10;&#10;    launch(dispatcher) {&#10;        println(&quot;Starting in ${Thread.currentThread().name}&quot;)&#10;        delay(1000)&#10;        println(&quot;Resuming in ${Thread.currentThread().name}&quot;)&#10;    }.start()&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103765000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="229120" />
                      <option name="index" value="4" />
                      <option name="name" value="Channels" />
                      <option name="updateDate" value="1565103768000" />
                      <option name="unitId" value="201653" />
                      <option name="items">
                        <list>
                          <TheoryTask>
                            <option name="customPresentableName" value="Contoh" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Channels&lt;/h1&gt;&#10;Ini adalah contoh kode interaksi antar coroutine menggunakan &lt;b&gt;Channels&lt;/b&gt;.&#10;Penjelasan kode dapat Anda lihat pada modul &lt;a href=&quot;https://www.dicoding.com/academies/80/tutorials/4302&quot; rel=&quot;noopener noreferrer nofollow&quot;&gt;Channels&lt;/a&gt;.&#10;&lt;br&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="712022" />
                            <option name="index" value="1" />
                            <option name="name" value="Contoh" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/App.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/App.kt" />
                                      <option name="text" value="import kotlinx.coroutines.*&#10;import kotlinx.coroutines.channels.Channel&#10;&#10;fun main() = runBlocking(CoroutineName(&quot;main&quot;)) {&#10;    val channel = Channel&lt;Int&gt;()&#10;    launch(CoroutineName(&quot;v1coroutine&quot;)){&#10;        println(&quot;Sending from ${Thread.currentThread().name}&quot;)&#10;        for (x in 1..5) channel.send(x * x)&#10;    }&#10;&#10;    repeat(5) { println(channel.receive()) }&#10;    println(&quot;received in ${Thread.currentThread().name}&quot;)&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1565103768000" />
                          </TheoryTask>
                        </list>
                      </option>
                    </Lesson>
                    <Lesson>
                      <option name="customPresentableName" />
                      <option name="id" value="265465" />
                      <option name="index" value="5" />
                      <option name="name" value="latihan" />
                      <option name="updateDate" value="1571195585000" />
                      <option name="unitId" value="246423" />
                      <option name="items">
                        <list>
                          <OutputTask>
                            <option name="customPresentableName" value="Latihan" />
                            <option name="descriptionFormat" value="HTML" />
                            <option name="descriptionText" value="&#10;&lt;h1&gt;Latihan&lt;/h1&gt;&#10;Lengkapi potongan kode pada program sederhana di samping agar dapat berjalan dengan baik.&#10;&lt;br&gt;&#10;&lt;br&gt;&#10;&lt;b&gt;&lt;i&gt;TODO 1:&lt;/i&gt;&lt;/b&gt;&lt;br&gt;Ubahlah menjadi &lt;i&gt;suspend function&lt;/i&gt; dengan ketentuan sebagai berikut:&#10;&lt;ul&gt;&#10;  &lt;li&gt;&#10;    Memiliki waktu tunggu 3 detik sebelum operasi selanjutnya berjalan.&#10;  &lt;/li&gt;&#10;  &lt;li&gt;&#10;    Mengembalikan nilai hasil penjumlahan &lt;code&gt;valueA&lt;/code&gt; dan &lt;code&gt;valueB&lt;/code&gt;.&#10;  &lt;/li&gt;&#10;&lt;/ul&gt;&#10;&lt;br&gt;&#10;&lt;b&gt;&lt;i&gt;TODO 2:&lt;/i&gt;&lt;/b&gt;&lt;br&gt;Ubahlah menjadi &lt;i&gt;suspend function&lt;/i&gt; dengan ketentuan sebagai berikut:&#10;&lt;ul&gt;&#10;  &lt;li&gt;&#10;    Memiliki waktu tunggu 2 detik sebelum operasi selanjutnya berjalan.&#10;  &lt;/li&gt;&#10;  &lt;li&gt;&#10;    Mengembalikan nilai hasil perkalian &lt;code&gt;valueA&lt;/code&gt; dan &lt;code&gt;valueB&lt;/code&gt;.&#10;  &lt;/li&gt;&#10;&lt;/ul&gt;&#10;&lt;br&gt;&lt;i&gt;TODO 3:&lt;/i&gt;&lt;br&gt;Tambahkan fungsi untuk mencetak nilai tangguhan dari variable &lt;code&gt;resultSum&lt;/code&gt; dan &lt;code&gt;resultMultiple&lt;/code&gt; pada konsol.&#10;&lt;br&gt;&lt;br&gt;&#10;Jika dijalankan, pada konsol akan menampilkan teks:&#10;&lt;pre&gt;Counting...&#10;Result sum: 20&#10;Result multiple: 400&#10;&lt;/pre&gt;&#10;" />
                            <option name="feedbackLink">
                              <FeedbackLink>
                                <option name="link" />
                                <option name="type" value="STEPIK" />
                              </FeedbackLink>
                            </option>
                            <option name="id" value="878042" />
                            <option name="index" value="1" />
                            <option name="name" value="Latihan" />
                            <option name="record" value="-1" />
                            <option name="status" value="Solved" />
                            <option name="files">
                              <map>
                                <entry key="src/Task.kt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="src/Task.kt" />
                                      <option name="text" value="import kotlinx.coroutines.*&#10;&#10;// TODO 1&#10;fun sum(valueA: Int, valueB: Int): Int {&#10;    return 0&#10;}&#10;&#10;// TODO 2&#10;fun multiple(valueA: Int, valueB: Int): Int {&#10;    return 0&#10;}&#10;&#10;fun main() = runBlocking {&#10;&#10;    println(&quot;Counting...&quot;)&#10;&#10;    val resultSum = async { sum(10, 10) }&#10;    val resultMultiple = async { multiple(20, 20) }&#10;&#10;    // TODO 3&#10;    println()&#10;}" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="true" />
                                    </TaskFile>
                                  </value>
                                </entry>
                                <entry key="test/output.txt">
                                  <value>
                                    <TaskFile>
                                      <option name="answerPlaceholders">
                                        <list />
                                      </option>
                                      <option name="highlightErrors" value="false" />
                                      <option name="name" value="test/output.txt" />
                                      <option name="text" value="Counting...&#10;Result sum: 20&#10;Result multiple: 400" />
                                      <option name="trackChanges" value="true" />
                                      <option name="visible" value="false" />
                                    </TaskFile>
                                  </value>
                                </entry>
                              </map>
                            </option>
                            <option name="updateDate" value="1571193467000" />
                          </OutputTask>
                        </list>
                      </option>
                    </Lesson>
                  </list>
                </option>
              </Section>
            </list>
          </option>
        </EduCourse>
      </option>
    </StudyTaskManager>
  </component>
</project>